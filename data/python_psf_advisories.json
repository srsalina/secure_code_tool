[
    {
        "id": "PSF-2022-7",
        "summary": "CVE-2021-3737: urllib HTTP client possible infinite loop on a 100 Continue response",
        "details": "A flaw was found in python. An improperly handled HTTP response in the HTTP client code of python may allow a remote attacker, who controls the HTTP server, to make the client script enter an infinite loop, consuming CPU time. The highest threat from this vulnerability is to system availability.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "078b146f062d212919d0ba25e34e658a8234aa63"
                            },
                            {
                                "fixed": "47895e31b6f626bc6ce47d175fe9d43c1098909d"
                            },
                            {
                                "fixed": "60ba0b68470a584103e28958d91e93a6db37ec92"
                            },
                            {
                                "fixed": "ea9327036680acc92d9f89eaf6f6a54d2f8d78d9"
                            },
                            {
                                "fixed": "f396864ddfe914531b5856d7bf852808ebfc01ae"
                            },
                            {
                                "fixed": "f68d2d69f1da56c2aea1293ecf93ab69a6010ad7"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/CVE-2021-3737"
            },
            {
                "type": "ADVISORY",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1995162"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue44022"
            }
        ]
    },
    {
        "id": "PSF-2017-2",
        "summary": "Zlib 1.2.11",
        "details": "inftrees.c in zlib 1.2.8 might allow context-dependent attackers to have unspecified impact by leveraging improper pointer arithmetic.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "34e7e2ecb1741850190e78f42875480693d3537b"
                            },
                            {
                                "fixed": "80b24a9354c60f6b800d462c941c6d4cde3cf783"
                            },
                            {
                                "fixed": "d0e61bded5256e775e470e2c0da22367a1a81970"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue29169"
            }
        ]
    },
    {
        "id": "PSF-2012-1",
        "summary": "SimpleHTTPServer UTF-7",
        "details": "The list_directory function in Lib/SimpleHTTPServer.py in SimpleHTTPServer in Python before 2.5.6c1, 2.6.x before 2.6.7 rc2, and 2.7.x before 2.7.2 does not place a charset parameter in the Content-Type HTTP header, which makes it easier for remote attackers to conduct cross-site scripting (XSS) attacks against Internet Explorer 7 via UTF-7 encoding.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3853586e0caa0d5c4342ac8bd7e78cb5766fa8cc"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue11442"
            }
        ]
    },
    {
        "id": "PSF-2008-6",
        "summary": "Multiple integer overflows (Apple)",
        "details": "Multiple buffer overflows in Python 2.5.2 and earlier on 32bit platforms allow context-dependent attackers to cause a denial of service (crash) or have unspecified other impact via a long string that leads to incorrect memory allocation during Unicode string processing, related to the unicode_resize function and the PyMem_RESIZE macro.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3ce5d9207e66d61d4b0502cf47ed2d2bcdd2212f"
                            },
                            {
                                "fixed": "e7d8be80ba634fa15ece6f503c33592e0d333361"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://lists.apple.com/archives/security-announce/2009/Feb/msg00000.html"
            }
        ]
    },
    {
        "id": "PSF-2023-3",
        "summary": "",
        "details": "CPython v3.12.0 alpha 7 was discovered to contain a heap use-after-free via the function ascii_decode at /Objects/unicodeobject.c.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "1ef61cf71a218c71860ff6aecf0fd51edb8b65dc"
                            },
                            {
                                "fixed": "d5a97074d24cd14cb2a35a2b1ad3074863cde264"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": []
    },
    {
        "id": "PSF-2016-6",
        "summary": "Expat 2.2 (Expat bug #537)",
        "details": "The overflow protection in Expat is removed by compilers with certain optimization settings, which allows remote attackers to cause a denial of service (crash) or possibly execute arbitrary code via crafted XML data.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-1283 and CVE-2015-2716.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0e4571a68a7f48e8469ef05b04ba3463d3fd82c0"
                            },
                            {
                                "fixed": "23ec4b57e1359f9c539b8defc317542173ae087e"
                            },
                            {
                                "fixed": "71572bbe82aa0836c036d44d41c8269ba6a321be"
                            },
                            {
                                "fixed": "86b95370c45dedb8a56c9894372a43681de47a73"
                            },
                            {
                                "fixed": "8c797ed8a0fea5e3162b9415f13e270d4d5d9549"
                            },
                            {
                                "fixed": "ab90986600ba7dea2aa41e5c1773791070725453"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue29591"
            },
            {
                "type": "WEB",
                "url": "https://bugs.python.org/issue30610"
            },
            {
                "type": "WEB",
                "url": "https://sourceforge.net/p/expat/bugs/537/"
            }
        ]
    },
    {
        "id": "PSF-2018-7",
        "summary": "xml package does not obey ignore_environment",
        "details": "On two occasions, the xml package uses environment variables to override\nparser / DOM implementations: ``xml.sax package`` and ``xml.dom.domreg``\nmodule. On both occasions, the code should not use env vars to override\nmodule names, when the interpreter is started with flags like ``-E``\nor ``-I``.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "223e501fb9c2b6ae21b96054e20c4c31d94a5d96"
                            },
                            {
                                "fixed": "2546ac8eeb56fc146adea9a03158440a9271714e"
                            },
                            {
                                "fixed": "5e808f92ea4eb238b17757526b99f97debf7dd57"
                            },
                            {
                                "fixed": "765d333512e9b58da4a4431595a0e81517ef0443"
                            },
                            {
                                "fixed": "7cd08cf62086a8a2d84fd825dfcd8bfe33bf1986"
                            },
                            {
                                "fixed": "c119d5948f941d2f528dda3f099e196bd6383000"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue34791"
            }
        ]
    },
    {
        "id": "PSF-2024-1",
        "summary": "",
        "details": "An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "81c16cd94ec38d61aa478b9a452436dc3b1b524d"
                            },
                            {
                                "fixed": "6ceb8aeda504b079fef7a57b8d81472f15cdd9a5"
                            },
                            {
                                "fixed": "5585334d772b253a01a6730e8202ffb1607c3d25"
                            },
                            {
                                "fixed": "8eaeefe49d179ca4908d052745e3bb8b6f238f82"
                            },
                            {
                                "fixed": "d54e22a669ae6e987199bb5d2c69bb5a46b0083b"
                            },
                            {
                                "fixed": "02a9259c717738dfe6b463c44d7e17f2b6d2cb3a"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/81c16cd94ec38d61aa478b9a452436dc3b1b524d"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/6ceb8aeda504b079fef7a57b8d81472f15cdd9a5"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/5585334d772b253a01a6730e8202ffb1607c3d25"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/8eaeefe49d179ca4908d052745e3bb8b6f238f82"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/d54e22a669ae6e987199bb5d2c69bb5a46b0083b"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/02a9259c717738dfe6b463c44d7e17f2b6d2cb3a"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/91133"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/Q5C6ATFC67K53XFV4KE45325S7NS62LD/"
            },
            {
                "type": "WEB",
                "url": "https://lists.debian.org/debian-lts-announce/2024/03/msg00025.html"
            },
            {
                "type": "WEB",
                "url": "http://www.openwall.com/lists/oss-security/2024/03/20/5"
            },
            {
                "type": "WEB",
                "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T3IGRX54M7RNCQOXVQO5KQKTGWCOABIM/"
            },
            {
                "type": "WEB",
                "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U5VHWS52HGD743C47UMCSAK2A773M2YE/"
            }
        ]
    },
    {
        "id": "PSF-2020-6",
        "summary": "CJK codecs tests call eval() on content retrieved via HTTP",
        "details": "In Python 3 through 3.9.0, the Lib/test/multibytecodec_support.py CJK codec tests call eval() on content retrieved via HTTP.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "2ef5caa58febc8968e670e39e3d37cf8eef3cab8"
                            },
                            {
                                "fixed": "43e523103886af66d6c27cd72431b5d9d14cd2a9"
                            },
                            {
                                "fixed": "6c6c256df3636ff6f6136820afaefa5a10a3ac33"
                            },
                            {
                                "fixed": "b664a1df4ee71d3760ab937653b10997081b1794"
                            },
                            {
                                "fixed": "e912e945f2960029d039d3390ea08835ad39374b"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/CVE-2020-27619"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue41944"
            }
        ]
    },
    {
        "id": "PSF-2019-3",
        "summary": "urlsplit does not handle NFKC normalization (second fix)",
        "details": "A security regression of CVE-2019-9636 was discovered in python since commit d537ab0ff9767ef024f26246899728f0116b1ec3 affecting versions 2.7, 3.5, 3.6, 3.7 and from v3.8.0a4 through v3.8.0b1, which still allows an attacker to exploit CVE-2019-9636 by abusing the user and password parts of a URL. When an application parses user-supplied URLs to store cookies, authentication credentials, or other kind of information, it is possible for an attacker to provide specially crafted URLs to make the application locate host-related information (e.g. cookies, authentication data) and send them to a different host than where it should, unlike if the URLs had been correctly parsed. The result of an attack may vary based on the application.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "250b62acc59921d399f0db47db3b462cd6037e09"
                            },
                            {
                                "fixed": "4655d576141ee56a69d2052431c636858fcb916a"
                            },
                            {
                                "fixed": "8d0ef0b5edeae52960c7ed05ae8a12388324f87e"
                            },
                            {
                                "fixed": "f61599b050c621386a3fc6bc480359e2d3bb93de"
                            },
                            {
                                "fixed": "fd1771dbdd28709716bd531580c40ae5ed814468"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue36742"
            }
        ]
    },
    {
        "id": "PSF-2019-10",
        "summary": "HTTP Header Injection (follow-up of CVE-2016-5699)",
        "details": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the query string after a ? character) followed by an HTTP header or a Redis command. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "7e200e0763f5b71c199aaf98bd5588f291585619"
                            },
                            {
                                "fixed": "afe3a4975cf93c97e5d6eb8800e48f368011d37a"
                            },
                            {
                                "fixed": "bb8071a4cae5ab3fe321481dd3d73662ffb26052"
                            },
                            {
                                "fixed": "c4e671eec20dfcb29b18596a89ef075f826c9f96"
                            },
                            {
                                "fixed": "c50d437e942d4c4c45c8cd76329b05340c02eb31"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30458"
            }
        ]
    },
    {
        "id": "PSF-2014-7",
        "summary": "Validate TLS certificate",
        "details": "The HTTP clients in the (1) httplib, (2) urllib, (3) urllib2, and (4) xmlrpclib libraries in CPython (aka Python) 2.x before 2.7.9 and 3.x before 3.4.3, when accessing an HTTPS URL, do not (a) check the certificate against a trust store or verify that the server hostname matches a domain name in the subject's (b) Common Name or (c) subjectAltName field of the X.509 certificate, which allows man-in-the-middle attackers to spoof SSL servers via an arbitrary valid certificate.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4ffb0752710f0c0720d4f2af0c4b7ce1ebb9d2bd"
                            },
                            {
                                "fixed": "e3e7d40514e5dd0c3847682a719577efcfae1d8f"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue22417"
            },
            {
                "type": "WEB",
                "url": "https://www.python.org/dev/peps/pep-0476/"
            }
        ]
    },
    {
        "id": "PSF-2021-2",
        "summary": "ipaddress leading zeros in IPv4 address",
        "details": "In Python before 3,9,5, the ipaddress library mishandles leading zero characters in the octets of an IP address string. This (in some situations) allows attackers to bypass access control that is based on IP addresses.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "03dd89d62413c4a92831ed1b36e2ae8983bcb2d4"
                            },
                            {
                                "fixed": "5374fbc31446364bf5f12e5ab88c5493c35eaf04"
                            },
                            {
                                "fixed": "60ce8f0be6354ad565393ab449d8de5d713f35bc"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "WEB",
                "url": "https://sick.codes/sick-2021-014"
            }
        ]
    },
    {
        "id": "PSF-2021-3",
        "summary": "ctypes: Buffer overflow in PyCArg_repr",
        "details": "Python 3.x through 3.9.1 has a buffer overflow in PyCArg_repr in _ctypes/callproc.c, which may lead to remote code execution in certain Python applications that accept floating-point numbers as untrusted input, as demonstrated by a 1e300 argument to c_double.from_param. This occurs because sprintf is used unsafely.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "34df10a9a16b38d54421eeeaf73ec89828563be7"
                            },
                            {
                                "fixed": "916610ef90a0d0761f08747f7b0905541f0977c7"
                            },
                            {
                                "fixed": "c347cbe694743cee120457aa6626712f7799a932"
                            },
                            {
                                "fixed": "d9b8f138b7df3b455b54653ca59f491b4840d6fa"
                            },
                            {
                                "fixed": "ece5dfd403dac211f8d3c72701fe7ba7b7aa5b5f"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2021-3177"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue42938"
            }
        ]
    },
    {
        "id": "PSF-2019-11",
        "summary": "HTTP Header Injection (follow-up of CVE-2016-5699)",
        "details": "An issue was discovered in urllib2 in Python 2.x through 2.7.16 and urllib in Python 3.x through 3.7.3. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the path component of a URL that lacks a ? character) followed by an HTTP header or a Redis command. This is similar to the CVE-2019-9740 query string issue. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "7e200e0763f5b71c199aaf98bd5588f291585619"
                            },
                            {
                                "fixed": "afe3a4975cf93c97e5d6eb8800e48f368011d37a"
                            },
                            {
                                "fixed": "bb8071a4cae5ab3fe321481dd3d73662ffb26052"
                            },
                            {
                                "fixed": "c4e671eec20dfcb29b18596a89ef075f826c9f96"
                            },
                            {
                                "fixed": "c50d437e942d4c4c45c8cd76329b05340c02eb31"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30458"
            }
        ]
    },
    {
        "id": "PSF-2007-2",
        "summary": "Directory path traversal in extract() and extractall() tarfile functions via '..' (dot dot) sequences",
        "details": "Directory traversal vulnerability in the (1) extract and (2) extractall functions in the tarfile module in Python allows user-assisted remote attackers to overwrite arbitrary files via a .. (dot dot) sequence in filenames in a TAR archive, a related issue to CVE-2001-1267.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "79e63e528795c700a8bd198c15f3322ee25ea786"
                            },
                            {
                                "fixed": "98016f7c92aa4c1232c68bac1ed6646db31782ec"
                            },
                            {
                                "fixed": "425065bb002b9cbf9c12f61a6f3102f2ce2b8d14"
                            },
                            {
                                "fixed": "af530469954e8ad49f1e071ef31c844b9bfda414"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "http://mail.python.org/pipermail/python-dev/2007-August/074290.html"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/102950"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/pull/102953"
            }
        ]
    },
    {
        "id": "PSF-2014-6",
        "summary": "buffer() integer overflows",
        "details": "Integer overflow in bufferobject.c in Python before 2.7.8 allows context-dependent attackers to obtain sensitive information from process memory via a large size and offset in a \"buffer\" function.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "550b945fd66f1c6837a53fbf29dc8e524297b8c3"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue21831"
            }
        ]
    },
    {
        "id": "PSF-2023-12",
        "summary": "Groups not dropped before running subprocess when using empty 'extra_groups' parameter",
        "details": "An issue was found in CPython 3.12.0 `subprocess` module on POSIX platforms. The issue was fixed in CPython 3.12.1 and does not affect other stable releases.\n\nWhen using the `extra_groups=` parameter with an empty list as a value (ie `extra_groups=[]`) the logic regressed to not call `setgroups(0, NULL)` before calling `exec()`, thus not dropping the original processes' groups before starting the new process. There is no issue when the parameter isn't used or when any value is used besides an empty list.\n\nThis issue only impacts CPython processes run with sufficient privilege to make the `setgroups` system call (typically `root`).\n\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "124af17b6e49f0f22fbe646fb57800393235d704"
                            },
                            {
                                "fixed": "9fe7655c6ce0b8e9adc229daf681b6d30e6b1610"
                            },
                            {
                                "fixed": "10e9bb13b8dcaa414645b9bd10718d8f7179e82b"
                            },
                            {
                                "fixed": "85bbfa8a4bbdbb61a3a84fbd7cb29a4096ab8a06"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/112334"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/AUL7QFHBLILGISS7U63B47AYSSGJJQZD/"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/9fe7655c6ce0b8e9adc229daf681b6d30e6b1610"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/10e9bb13b8dcaa414645b9bd10718d8f7179e82b"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/85bbfa8a4bbdbb61a3a84fbd7cb29a4096ab8a06"
            }
        ]
    },
    {
        "id": "PSF-2010-1",
        "summary": "rgbimg and imageop overflows",
        "details": "Buffer underflow in the rgbimg module in Python 2.5 allows remote attackers to cause a denial of service (application crash) via a large ZSIZE value in a black-and-white (aka B/W) RGB image that triggers an invalid pointer dereference.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4df1b6d478020ac51c84467f47e42083f53adbad"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue1179"
            },
            {
                "type": "WEB",
                "url": "http://bugs.python.org/issue8678"
            },
            {
                "type": "WEB",
                "url": "http://seclists.org/fulldisclosure/2007/Sep/279"
            },
            {
                "type": "WEB",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=541698"
            }
        ]
    },
    {
        "id": "PSF-2019-2",
        "summary": "HTTPoxy attack",
        "details": "The CGIHandler class in Python before 2.7.12 does not protect against the HTTP_PROXY variable name clash in a CGI script, which could allow a remote attacker to redirect HTTP requests.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4cbb23f8f278fd1f71dcd5968aa0b3f0b4f3bd5d"
                            },
                            {
                                "fixed": "75d7b615ba70fc5759d16dee95bbd8f0474d8a9c"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2016-1000110"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue27568"
            },
            {
                "type": "WEB",
                "url": "https://httpoxy.org/"
            }
        ]
    },
    {
        "id": "PSF-2020-7",
        "summary": "CVE-2020-8315: Unsafe DLL loading in getpathp.c on Windows 7",
        "details": "In Python (CPython) 3.6 through 3.6.10, 3.7 through 3.7.6, and 3.8 through 3.8.1, an insecure dependency load upon launch on Windows 7 may result in an attacker's copy of api-ms-win-core-path-l1-1-0.dll being loaded and used instead of the system's copy. Windows 8 and later are unaffected.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "51332c467ed2e07a191f903d554d0c54248e4d88"
                            },
                            {
                                "fixed": "561c59777c8426fde0ef48b57cf02eddaeb2a5b8"
                            },
                            {
                                "fixed": "6a65eba44bfd82ccc8bed4b5c6dd6637549955d5"
                            },
                            {
                                "fixed": "ad4a20b87d79a619ffbdea3f26848780899494e5"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue39401"
            }
        ]
    },
    {
        "id": "PSF-2018-6",
        "summary": "pickle.load denial of service",
        "details": "Modules/_pickle.c in Python before 3.7.1 has an integer overflow via a large LONG_BINPUT value that is mishandled during a \"resize to twice the size\" attempt. This issue might cause memory exhaustion, but is only relevant if the pickle format is used for serializing tens or hundreds of gigabytes of data. This issue is fixed in: v3.4.10, v3.4.10rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.7rc1, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.7, v3.6.7rc1, v3.6.7rc2, v3.6.8, v3.6.8rc1, v3.6.9, v3.6.9rc1; v3.7.1, v3.7.1rc1, v3.7.1rc2, v3.7.2, v3.7.2rc1, v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4b42d575bf0fb01192b3ec54b7e224b238691527"
                            },
                            {
                                "fixed": "71a9c65e74a70b6ed39adc4ba81d311ac1aa2acc"
                            },
                            {
                                "fixed": "a4ae828ee416a66d8c7bf5ee71d653c2cc6a26dd"
                            },
                            {
                                "fixed": "ef33dd6036aafbd3f06c1d56e2b1a81dae3da63c"
                            },
                            {
                                "fixed": "ef4306b24c9034d6b37bb034e2ebe82e745d4b77"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue34656"
            },
            {
                "type": "WEB",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1664511"
            }
        ]
    },
    {
        "id": "PSF-2016-7",
        "summary": "zipimporter overflow",
        "details": "Integer overflow in the get_data function in zipimport.c in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 allows remote attackers to have unspecified impact via a negative data size value, which triggers a heap-based buffer overflow.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "64ea192b73e39e877d8b39ce6584fa580eb0e9b4"
                            },
                            {
                                "fixed": "d751040b1a4e35fd3b01fc919cd8f9374ed714fd"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue26171"
            }
        ]
    },
    {
        "id": "PSF-2023-2",
        "summary": "Parsing errors in email/_parseaddr.py lead to incorrect value in email address part of tuple",
        "details": "The email module of Python through 3.11.3 incorrectly parses e-mail addresses that contain a special character. The wrong portion of an RFC2822 header is identified as the value of the addr-spec. In some applications, an attacker can bypass a protection mechanism in which application access is granted only after verifying receipt of e-mail to a specific domain (e.g., only @company.example.com addresses may be used for signup). This occurs in email/_parseaddr.py in recent versions of Python.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4a153a1d3b18803a684cd1bcc2cdf3ede3dbae19"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/102988"
            }
        ]
    },
    {
        "id": "PSF-2008-7",
        "summary": "Multiple integer overflows (Google)",
        "details": "Multiple integer overflows in Python before 2.5.2 might allow context-dependent attackers to have an unknown impact via vectors related to (1) Include/pymem.h; (2) _csv.c, (3) _struct.c, (4) arraymodule.c, (5) audioop.c, (6) binascii.c, (7) cPickle.c, (8) cStringIO.c, (9) cjkcodecs/multibytecodec.c, (10) datetimemodule.c, (11) md5.c, (12) rgbimgmodule.c, and (13) stropmodule.c in Modules/; (14) bufferobject.c, (15) listobject.c, and (16) obmalloc.c in Objects/; (17) Parser/node.c; and (18) asdl.c, (19) ast.c, (20) bltinmodule.c, and (21) compile.c in Python/, as addressed by \"checks for integer overflows, contributed by Google.\"",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "83ac0144fa3041556aa4f3952ebd979e0189a19c"
                            },
                            {
                                "fixed": "d492ad80c872d264ed46bec71e31a00f174ac819"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue2620"
            }
        ]
    },
    {
        "id": "PSF-2008-10",
        "summary": "expandtab() integer overflow",
        "details": "Multiple integer overflows in Python 2.2.3 through 2.5.1, and 2.6, allow context-dependent attackers to have an unknown impact via a large integer value in the tabsize argument to the expandtabs method, as implemented by (1) the string_expandtabs function in Objects/stringobject.c and (2) the unicode_expandtabs function in Objects/unicodeobject.c.  NOTE: this vulnerability reportedly exists because of an incomplete fix for CVE-2008-2315.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "44a93e54f4b0f90634d16d53c437fabb6946ea9d"
                            },
                            {
                                "fixed": "dd15f6c315f20c1a9a540dd757cd63e27dbe9f3c"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "http://scary.beasts.org/security/CESA-2008-008.html"
            }
        ]
    },
    {
        "id": "PSF-2017-3",
        "summary": "Zlib 1.2.11",
        "details": "inffast.c in zlib 1.2.8 might allow context-dependent attackers to have unspecified impact by leveraging improper pointer arithmetic.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "34e7e2ecb1741850190e78f42875480693d3537b"
                            },
                            {
                                "fixed": "80b24a9354c60f6b800d462c941c6d4cde3cf783"
                            },
                            {
                                "fixed": "d0e61bded5256e775e470e2c0da22367a1a81970"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue29169"
            }
        ]
    },
    {
        "id": "PSF-2022-6",
        "summary": "CVE-2021-3733: ReDoS in urllib.request",
        "details": "There's a flaw in urllib's AbstractBasicAuthHandler class. An attacker who controls a malicious HTTP server that an HTTP client (such as web browser) connects to, could trigger a Regular Expression Denial of Service (ReDOS) during an authentication request with a specially crafted payload that is sent by the server to the client. The greatest threat that this flaw poses is to application availability.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3fbe96123aeb66664fa547a8f6022efa2dc8788f"
                            },
                            {
                                "fixed": "7215d1ae25525c92b026166f9d5cac85fb1defe1"
                            },
                            {
                                "fixed": "a21d4fbd549ec9685068a113660553d7f80d9b09"
                            },
                            {
                                "fixed": "ada14995870abddc277addf57dd690a2af04c2da"
                            },
                            {
                                "fixed": "e7654b6046090914a8323931ed759a94a5f85d60"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2021-3733"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue43075"
            }
        ]
    },
    {
        "id": "PSF-2013-3",
        "summary": "CGI directory traversal (URL parsing)",
        "details": "An error in separating the path and filename of the CGI script to run in\n``http.server.CGIHTTPRequestHandler`` allows running arbitrary executables\nin the directory under which the server was started.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "04e9de40f380b2695f955d68f2721d57cecbf858"
                            },
                            {
                                "fixed": "1ef959ac3ddc4d96dfa1a613db5cb206cdaeb662"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue19435"
            }
        ]
    },
    {
        "id": "PSF-2022-1",
        "summary": "mailcap shell command injection ",
        "details": "In Python (aka CPython) up to 3.10.8, the mailcap module does not add escape characters into commands discovered in the system mailcap file. This may allow attackers to inject shell commands into applications that call mailcap.findmatch with untrusted input (if they lack validation of user-provided filenames or arguments). The fix is also back-ported to 3.7, 3.8, 3.9",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0a4f650347fdcfd82d094ab2134ca89584f4e877"
                            },
                            {
                                "fixed": "6e8e9e7c030b6236ff220362944cba1b93c84bc4"
                            },
                            {
                                "fixed": "96739bccf220689a54ef33341f431eda19c287fa"
                            },
                            {
                                "fixed": "c59a16e2c7495a90e6d23a48ec98623f3fb1e176"
                            },
                            {
                                "fixed": "fae93ab16377db23ba6abc10480b04a58db62bdd"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue24778"
            }
        ]
    },
    {
        "id": "PSF-2017-4",
        "summary": "Zlib 1.2.11",
        "details": "The inflateMark function in inflate.c in zlib 1.2.8 might allow context-dependent attackers to have unspecified impact via vectors involving left shifts of negative integers.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "34e7e2ecb1741850190e78f42875480693d3537b"
                            },
                            {
                                "fixed": "80b24a9354c60f6b800d462c941c6d4cde3cf783"
                            },
                            {
                                "fixed": "d0e61bded5256e775e470e2c0da22367a1a81970"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue29169"
            }
        ]
    },
    {
        "id": "PSF-2023-5",
        "summary": "XML External Entity issue in plistlib module",
        "details": "An XML External Entity (XXE) issue was discovered in Python through 3.9.1. The plistlib module no longer accepts entity declarations in XML plist files to avoid XML vulnerabilities.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "05ee790f4d1cd8725a90b54268fc1dfe5b4d1fa2"
                            },
                            {
                                "fixed": "479553c7c11306a09ce34edb6ef208133b7b95fe"
                            },
                            {
                                "fixed": "65894cac0835cb8f469f649e20aa1be8bf89f5ae"
                            },
                            {
                                "fixed": "e512bc799e3864fe3b1351757261762d63471efc"
                            },
                            {
                                "fixed": "a158fb9c5138db94adf24fbc5690467cda811163"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-48565"
            },
            {
                "type": "WEB",
                "url": "https://bugs.python.org/issue42051"
            }
        ]
    },
    {
        "id": "PSF-2011-2",
        "summary": "urllib redirect",
        "details": "The urllib and urllib2 modules in Python 2.x before 2.7.2 and 3.x before 3.2.1 process Location headers that specify redirection to file: URLs, which makes it easier for remote attackers to obtain sensitive information or cause a denial of service (resource consumption) via a crafted URL, as demonstrated by the file:///etc/passwd and file:///dev/zero URLs.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "60a4a90c8dd2972eb4bb977e70835be9593cbbac"
                            },
                            {
                                "fixed": "a119df91f33724f64e6bc1ecb484eeaa30ace014"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue11662"
            }
        ]
    },
    {
        "id": "PSF-2018-1",
        "summary": "Expat 2.2.1",
        "details": "An integer overflow during the parsing of XML using the Expat library. This vulnerability affects Firefox < 50.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "2ada64d2a073f85f135461833952dbe8d656810d"
                            },
                            {
                                "fixed": "5ff7132313eb651107b179d20218dfe5d4e47f13"
                            },
                            {
                                "fixed": "71572bbe82aa0836c036d44d41c8269ba6a321be"
                            },
                            {
                                "fixed": "91d171be45942d37a973b0675521b5159a96be31"
                            },
                            {
                                "fixed": "ab90986600ba7dea2aa41e5c1773791070725453"
                            },
                            {
                                "fixed": "ea1ab803ddc14ab02ffed50ecc5089897f259623"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://libexpat.github.io/doc/cve-2017-9233/"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30694"
            },
            {
                "type": "WEB",
                "url": "https://github.com/libexpat/libexpat/blob/R_2_2_1/expat/Changes"
            }
        ]
    },
    {
        "id": "PSF-2024-7",
        "summary": "",
        "details": "There is a MEDIUM severity vulnerability affecting CPython.\n\nThe\n \u201csocket\u201d module provides a pure-Python fallback to the \nsocket.socketpair() function for platforms that don\u2019t support AF_UNIX, \nsuch as Windows. This pure-Python implementation uses AF_INET or \nAF_INET6 to create a local connected pair of sockets. The connection \nbetween the two sockets was not verified before passing the two sockets \nback to the user, which leaves the server socket vulnerable to a \nconnection race from a malicious local peer.\n\nPlatforms that support AF_UNIX such as Linux and macOS are not affected by this vulnerability. Versions prior to CPython 3.5 are not affected due to the vulnerable API not being included.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "06fa244666ec6335a3b9bf2367e31b42b9a89b20"
                            },
                            {
                                "fixed": "0b65c8bf5367625673eafb92f85046a1b31259f2"
                            },
                            {
                                "fixed": "220e31adeaaa8436c9ff234cba1398bc49e2bb6c"
                            },
                            {
                                "fixed": "5f90abaa786f994db3907fc31e2ee00ea2cf0929"
                            },
                            {
                                "fixed": "b252317956b7fc035bb3774ef6a177e227f9fc54"
                            },
                            {
                                "fixed": "2621a8a40ba4b2c68ca564671b7daa5da80a4508"
                            },
                            {
                                "fixed": "5df322e91a40909e6904bbdbc0c3a6b6a9eead39"
                            },
                            {
                                "fixed": "c21a36112a0028d7ac3cf8f480e0dc88dba5922c"
                            },
                            {
                                "fixed": "f071f01b7b7e19d7d6b3a4b0ec62f820ecb14660"
                            },
                            {
                                "fixed": "31302f5fc24eecd693f0c8aaba7c2840b09b594d"
                            },
                            {
                                "fixed": "3f5d9d12c74787fbf3f5891835c85cc15526c86d"
                            },
                            {
                                "fixed": "c5655aa6ad120d2ed7f255bebd6e8b71a9c07dde"
                            },
                            {
                                "fixed": "e319f774f9e766a2b92949444a2d46081df3363a"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/122134"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/122133"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/WYKDQWIERRE2ICIYMSVRZJO33GSCWU2B/"
            },
            {
                "type": "WEB",
                "url": "http://www.openwall.com/lists/oss-security/2024/07/29/3"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/06fa244666ec6335a3b9bf2367e31b42b9a89b20"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/0b65c8bf5367625673eafb92f85046a1b31259f2"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/220e31adeaaa8436c9ff234cba1398bc49e2bb6c"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/5f90abaa786f994db3907fc31e2ee00ea2cf0929"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/b252317956b7fc035bb3774ef6a177e227f9fc54"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/2621a8a40ba4b2c68ca564671b7daa5da80a4508"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/5df322e91a40909e6904bbdbc0c3a6b6a9eead39"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/c21a36112a0028d7ac3cf8f480e0dc88dba5922c"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/f071f01b7b7e19d7d6b3a4b0ec62f820ecb14660"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/31302f5fc24eecd693f0c8aaba7c2840b09b594d"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/3f5d9d12c74787fbf3f5891835c85cc15526c86d"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/c5655aa6ad120d2ed7f255bebd6e8b71a9c07dde"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/e319f774f9e766a2b92949444a2d46081df3363a"
            }
        ]
    },
    {
        "id": "PSF-2019-5",
        "summary": "email.utils.parseaddr mistakenly parse an email",
        "details": "An issue was discovered in Python through 2.7.16, 3.x through 3.5.7, 3.6.x through 3.6.9, and 3.7.x through 3.7.4. The email module wrongly parses email addresses that contain multiple @ characters. An application that uses the email module and implements some kind of checks on the From/To headers of a message could be tricked into accepting an email address that should be denied. An attack may be the same as in CVE-2019-11340; however, this CVE applies to Python more generally.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "063eba280a11d3c9a5dd9ee5abe4de640907951b"
                            },
                            {
                                "fixed": "13a19139b5e76175bc95294d54afc9425e4f36c9"
                            },
                            {
                                "fixed": "217077440a6938a0b428f67cfef6e053c4f8673c"
                            },
                            {
                                "fixed": "4cbcd2f8c4e12b912e4d21fd892eedf7a3813d8e"
                            },
                            {
                                "fixed": "8cb65d1381b027f0b09ee36bfed7f35bb4dec9a9"
                            },
                            {
                                "fixed": "c48d606adcef395e59fd555496c42203b01dd3e8"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue34155"
            },
            {
                "type": "WEB",
                "url": "https://medium.com/@fs0c131y/tchap-the-super-not-secure-app-of-the-french-government-84b31517d144"
            },
            {
                "type": "WEB",
                "url": "https://twitter.com/fs0c131y/status/1119143946687434753"
            }
        ]
    },
    {
        "id": "PSF-2010-6",
        "summary": "smtpd accept bug and race condition",
        "details": "The asyncore module in Python before 3.2 does not properly handle unsuccessful calls to the accept function, and does not have accompanying documentation describing how daemon applications should handle unsuccessful calls to the accept function, which makes it easier for remote attackers to conduct denial of service attacks that terminate these applications via network connections.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "19e9fefc660d623ce7c31fb008cde1157ae12aba"
                            },
                            {
                                "fixed": "5ea3d0f95b51009fa1c3409e7dd1c12006427ccc"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue6706"
            }
        ]
    },
    {
        "id": "PSF-2019-16",
        "summary": "Email header injection in Address objects",
        "details": "It is possible to inject email headers using CR or LF character.\n\nThe fix disallows CR and LF characters in ``email.headerregistry.Address``\narguments to guard against header injection attacks.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "614f17211c5fc0e5b828be1d3320661d1038fe8f"
                            },
                            {
                                "fixed": "75635c6095bcfbb9fccc239115d3d03ae20a307f"
                            },
                            {
                                "fixed": "7df32f844efed33ca781a016017eab7050263b90"
                            },
                            {
                                "fixed": "a93bf82980d7c02217a088bafa193f32a4d13abb"
                            },
                            {
                                "fixed": "f91a0b6df14d6c5133fe3d5889fad7d84fc0c046"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue39073"
            }
        ]
    },
    {
        "id": "PSF-2014-1",
        "summary": "CVE-2013-0340 Billion Laughs fixed in Expat 2.4.0",
        "details": "expat 2.1.0 and earlier does not properly handle entities expansion unless an application developer uses the XML_SetEntityDeclHandler function, which allows remote attackers to cause a denial of service (resource consumption), send HTTP requests to intranet servers, or read arbitrary files via a crafted XML document, aka an XML External Entity (XXE) issue.  NOTE: it could be argued that because expat already provides the ability to disable external entity expansion, the responsibility for resolving this issue lies with application developers; according to this argument, this entry should be REJECTed, and each affected application would need its own CVE.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "007221a43e566db08c0c5c00756d80dfd9dccafe"
                            },
                            {
                                "fixed": "270678564c16452614a8acd93763bdf64fb4d286"
                            },
                            {
                                "fixed": "3fc5d84046ddbd66abac5b598956ea34605a4e5d"
                            },
                            {
                                "fixed": "79101b890ee021a901a8b6837a3a320d57adb725"
                            },
                            {
                                "fixed": "910886a6448e4bf1edf49eeace4aa240b6403772"
                            },
                            {
                                "fixed": "c9c2a0bc9820f93f1020f3498f6893a3544c9b76"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue44394"
            },
            {
                "type": "WEB",
                "url": "https://blog.hartwork.org/posts/cve-2013-0340-billion-laughs-fixed-in-expat-2-4-0/"
            }
        ]
    },
    {
        "id": "PSF-2021-4",
        "summary": "Information disclosure via pydoc getfile",
        "details": "There's a flaw in Python 3's pydoc. A local or adjacent attacker who discovers or is able to convince another local or adjacent user to start a pydoc server could access the server and use it to disclose sensitive information belonging to the other user that they would not normally be able to access. The highest risk of this flaw is to data confidentiality. This flaw affects Python versions before 3.8.9, Python versions before 3.9.3 and Python versions before 3.10.0a7.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "5b1e50256b6532667b6d31debc350f6c7d3f30aa"
                            },
                            {
                                "fixed": "7c2284f97d140c4e4a85382bfb3a42440be2464d"
                            },
                            {
                                "fixed": "7e38d3309e0a5a7b9e23ef933aef0079c6e317f7"
                            },
                            {
                                "fixed": "9b999479c0022edfc9835a8a1f06e046f3881048"
                            },
                            {
                                "fixed": "ed753d94856213ae9fc028195f670e66a24e2334"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1917807"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue42988"
            }
        ]
    },
    {
        "id": "PSF-2017-8",
        "summary": "Environment variables injection in subprocess on Windows",
        "details": "On Windows, prevent passing invalid environment variables and command\narguments to subprocess.Popen.\n\nIt is possible to inject an environment variable in subprocess on Windows\nif a user data is passed to a subprocess via environment variable.\n\nCheck for invalid environment (variable names containing '=') and command\narguments (containing '\\0').\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "9dda2caca8edc7ff1285f6b0d1c5279b51854b7d"
                            },
                            {
                                "fixed": "a7c0264735f46afab13771be4218d8eab0d7dc91"
                            },
                            {
                                "fixed": "a9b16cff35811f88cdfeb4f50758140dfff36ebc"
                            },
                            {
                                "fixed": "d174d24a5d37d1516b885dc7c82f71ecd5930700"
                            },
                            {
                                "fixed": "e46f1c19642ea1882f427d8246987ba49351a97d"
                            },
                            {
                                "fixed": "fe82c46327effc124ff166e1fa1e611579e1176b"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30730"
            }
        ]
    },
    {
        "id": "PSF-2023-9",
        "summary": "os.path.normpath() truncates on null bytes",
        "details": "Passing a path with null bytes to the `os.path.normpath()` function causes the returned path to be unexpectedly truncated at the first occurrence of null bytes within the path. Python versions before 3.11.0 didn\u2019t truncate the path on null bytes.\n\nIf allowlisting is applied before a call to `os.path.normpath()` is used later in the program, the allowlisting can be circumvented if the path containing null bytes is constructed to pass the allowlist but then change to the targeted resource after truncation.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "7c12e4835ebe52287acd200a2e76b533413b15d0"
                            },
                            {
                                "fixed": "09322724319d4c23195300b222a1c0ea720af56b"
                            },
                            {
                                "fixed": "ede98958810b76694cf756d305b564cd6adc1a48"
                            },
                            {
                                "fixed": "ccf81e1088c25a9f4464e478dc3b5c03ed7ee63b"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/D6CDW3ZZC5D444YGL3VQUY6D4ECMCQLD/"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/issues/106242"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/106816"
            }
        ]
    },
    {
        "id": "PSF-2019-9",
        "summary": "urlsplit does not handle NFKC normalization",
        "details": "Python 2.7.x through 2.7.16 and 3.x through 3.7.2 is affected by: Improper Handling of Unicode Encoding (with an incorrect netloc) during NFKC normalization. The impact is: Information disclosure (credentials, cookies, etc. that are cached against a given hostname). The components are: urllib.parse.urlsplit, urllib.parse.urlparse. The attack vector is: A specially crafted URL could be incorrectly parsed to locate cookies or authentication data and send that information to a different host than when parsed correctly. This is fixed in: v2.7.17, v2.7.17rc1, v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1, v3.5.7, v3.5.8, v3.5.8rc1, v3.5.8rc2, v3.5.9; v3.6.10, v3.6.10rc1, v3.6.11, v3.6.11rc1, v3.6.12, v3.6.9, v3.6.9rc1; v3.7.3, v3.7.3rc1, v3.7.4, v3.7.4rc1, v3.7.4rc2, v3.7.5, v3.7.5rc1, v3.7.6, v3.7.6rc1, v3.7.7, v3.7.7rc1, v3.7.8, v3.7.8rc1, v3.7.9.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "16e6f7dee7f02bb81aa6b385b982dcdda5b99286"
                            },
                            {
                                "fixed": "23fc0416454c4ad5b9b23d520fbe6d89be3efc24"
                            },
                            {
                                "fixed": "c0d95113b070799679bcb9dc49d4960d82e8bb08"
                            },
                            {
                                "fixed": "daad2c482c91de32d8305abbccc76a5de8b3a8be"
                            },
                            {
                                "fixed": "e37ef41289b77e0f0bb9a6aedb0360664c55bdd5"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue36216"
            }
        ]
    },
    {
        "id": "PSF-2019-8",
        "summary": "TALOS-2018-0758 SSL CRL distribution points Denial of Service",
        "details": "An exploitable denial-of-service vulnerability exists in the X509 certificate parser of Python.org Python 2.7.11 / 3.6.6. A specially crafted X509 certificate can cause a NULL pointer dereference, resulting in a denial of service. An attacker can initiate or accept TLS connections using crafted certificates to trigger this vulnerability.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "06b15424b0dcacb1c551b2a36e739fffa8d0c595"
                            },
                            {
                                "fixed": "216a4d83c3b72f4fdcd81b588dc3f42cc461739a"
                            },
                            {
                                "fixed": "6c655ce34ae54adb8eef22b73108e22cc381cb8d"
                            },
                            {
                                "fixed": "a37f52436f9aa4b9292878b72f3ff1480e2606c3"
                            },
                            {
                                "fixed": "be5de958e9052e322b0087c6dba81cdad0c3e031"
                            },
                            {
                                "fixed": "efec7631edf3b9480dc3988c97ffef94df8800da"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue35746"
            },
            {
                "type": "WEB",
                "url": "https://blog.talosintelligence.com/2019/01/vulnerability-spotlight-pythonorg.html"
            }
        ]
    },
    {
        "id": "PSF-2023-8",
        "summary": "Bypass TLS handshake on closed sockets",
        "details": "Instances of `ssl.SSLSocket` are vulnerable to a bypass of the TLS handshake and included protections (like certificate verification) and treating sent unencrypted data as if it were post-handshake TLS encrypted data.\n\nThe vulnerability is caused when a socket is connected, data is sent by the malicious peer and stored in a buffer, and then the malicious peer closes the socket within a small timing window before the other peers\u2019 TLS handshake can begin. After this sequence of events the closed socket will not immediately attempt a TLS handshake due to not being connected but will also allow the buffered data to be read as if a successful TLS handshake had occurred.\n\n### Affected usages\n\nThis vulnerability **primarily affects** HTTPS servers and other server-side protocols using TLS client authentication due to requiring reading data immediately after the handshake to be vulnerable. Operations which would fail on a closed socket (like sending data) immediately after the handshake **are not affected by this vulnerability.**\n\nBecause disconnecting the socket is a necessary step to trigger the vulnerability **there is no risk of data exfiltration or data leakage directly from the malicious TLS connection**, however the vulnerability does carry risk for modifying or deleting resources which are authenticated using only TLS client certificates.\n\nThis vulnerability **affects** clients who are reading and processing data from the server after a TLS handshake without sending any data first. Our team is unaware of a protocol that uses TLS that fits this usage pattern.\n\nThis vulnerability **does not affect** client-side HTTPS connections like pip or requests as an HTTP request must be sent before an HTTP response is read meaning the connection would already be closed by the time the client is sending an HTTP request, leading to an error.\n\nThis vulnerability **affects, but has no impact** on servers that aren\u2019t using TLS client certificate authentication as traffic to a non-authenticating TLS server loses nothing from a bypassed handshake to inject a query and close the connection as the same action could be taken by a peer using a TLS connection with a proper handshake.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "b4bcc06a9cfe13d96d5270809d963f8ba278f89b"
                            },
                            {
                                "fixed": "264b1dacc67346efa0933d1e63f622676e0ed96b"
                            },
                            {
                                "fixed": "37d7180cb647f0bed0c1caab0037f3bc82e2af96"
                            },
                            {
                                "fixed": "75a875e0df0530b75b1470d797942f90f4a718d3"
                            },
                            {
                                "fixed": "256586ab8776e4526ca594b4866b9a3492e628f1"
                            },
                            {
                                "fixed": "0cb0c238d520a8718e313b52cffc356a5a7561bf"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/PEPLII27KYHLF4AK3ZQGKYNCRERG4YXY/"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/issues/108310"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/108315"
            }
        ]
    },
    {
        "id": "PSF-2017-9",
        "summary": "bpo-30500: urllib connects to a wrong host",
        "details": "The urllib module doesn't parse correctly password containing the ``#``\ncharacter.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "052f9d6860c48c5abcff8e16212e77cf4249d66c"
                            },
                            {
                                "fixed": "4899d847ed3f56b2a712799f896aa1f28540a5c0"
                            },
                            {
                                "fixed": "90e01e50ef8a9e6c91f30d965563c378a4ad26de"
                            },
                            {
                                "fixed": "b0fba8874a4bd6bf4773e6efdbd8fa762e9f05bd"
                            },
                            {
                                "fixed": "cc54c1c0d2d05fe7404ba64c53df4b1352ed2262"
                            },
                            {
                                "fixed": "d4324baca4c03eb8d55446cd1b74b32ec5633af5"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30500"
            }
        ]
    },
    {
        "id": "PSF-2021-5",
        "summary": "ftplib should not use the host from the PASV response",
        "details": "The IPv4 address value returned from the server in response to the PASV\ncommand should not be trusted. This prevents a malicious FTP server from\nusing the response to probe IPv4 address and port combinations on the\nclient network.\n\nInstead of using the returned address, we use the IP address we're already\nconnected to. This is the strategy other ftp clients adopted, and matches\nthe only strategy available for the modern IPv6 EPSV command where the\nserver response must return a port number and nothing else.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0ab152c6b5d95caa2dc1a30fa96e10258b5f188e"
                            },
                            {
                                "fixed": "4134f154ae2f621f25c5d698cc0f1748035a1b88"
                            },
                            {
                                "fixed": "664d1d16274b47eea6ec92572e1ebf3939a6fa0c"
                            },
                            {
                                "fixed": "79373951b3eab585d42e0f0ab83718cbe1d0ee33"
                            },
                            {
                                "fixed": "7dcb4baa4f0fde3aef5122a8e9f6a41853ec9335"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://hackerone.com/reports/1040166"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue43285"
            }
        ]
    },
    {
        "id": "PSF-2024-10",
        "summary": "",
        "details": "There is a HIGH severity vulnerability affecting the CPython \"zipfile\"\nmodule affecting \"zipfile.Path\". Note that the more common API \"zipfile.ZipFile\" class is unaffected.\n\n\n\n\n\nWhen iterating over names of entries in a zip archive (for example, methods\nof \"zipfile.Path\" like \"namelist()\", \"iterdir()\", etc)\nthe process can be put into an infinite loop with a maliciously crafted\nzip archive. This defect applies when reading only metadata or extracting\nthe contents of the zip archive. Programs that are not handling\nuser-controlled zip archives are not affected.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "795f2597a4be988e2bb19b69ff9958e981cb894e"
                            },
                            {
                                "fixed": "8c7348939d8a3ecd79d630075f6be1b0c5b41f64"
                            },
                            {
                                "fixed": "dcc5182f27c1500006a1ef78e10613bb45788dea"
                            },
                            {
                                "fixed": "e0264a61119d551658d9445af38323ba94fc16db"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/GNFCKVI4TCATKQLALJ5SN4L4CSPSMILU/"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/122906"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/122905"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/795f2597a4be988e2bb19b69ff9958e981cb894e"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/8c7348939d8a3ecd79d630075f6be1b0c5b41f64"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/dcc5182f27c1500006a1ef78e10613bb45788dea"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/e0264a61119d551658d9445af38323ba94fc16db"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/123270"
            }
        ]
    },
    {
        "id": "PSF-2019-17",
        "summary": "http.cookiejar: Incorrect validation of path",
        "details": "Cookies of ``example.com`` with ``path=/any`` were sent to\n``example.com/anybad/`` while using a cookiejar with\n`http.cookiejar.DefaultCookiePolicy` policy. The code did not check for\nthe first non-matching character in prefix match to be a slash.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0e1f1f01058bd4a9b98cfe443214adecc019a38c"
                            },
                            {
                                "fixed": "382981b25092b5e9285f1e4894142af1e8f2ca86"
                            },
                            {
                                "fixed": "5565b1db6f37f244890369e0d68a3e906aca28b9"
                            },
                            {
                                "fixed": "97c7d78fda49e03fc773c171ce0c736d02bb73f5"
                            },
                            {
                                "fixed": "e260f092cd0d8975c777e73ca6fb549d59b5d452"
                            },
                            {
                                "fixed": "ee15aa2b8501718cb77e339381f72409a416f801"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue35647"
            }
        ]
    },
    {
        "id": "PSF-2019-4",
        "summary": "Windows: vulnerable bzip2 1.0.6",
        "details": "BZ2_decompress in decompress.c in bzip2 through 1.0.6 has an out-of-bounds write when there are many selectors.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4a3c610cd635f14747cf02c77908e80620aae6ea"
                            },
                            {
                                "fixed": "58d576a43cb1800dd68f06a429d7d41f746a8c01"
                            },
                            {
                                "fixed": "6649519e67841b1aa12672f1d9b5cb24494f6196"
                            },
                            {
                                "fixed": "e1639f361ee0dfbf08bb8538839d3d557c1a995c"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2016-3189"
            },
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2019-12900"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue44549"
            }
        ]
    },
    {
        "id": "PSF-2010-7",
        "summary": "smtpd accept bug and race condition",
        "details": "Multiple race conditions in smtpd.py in the smtpd module in Python 2.6, 2.7, 3.1, and 3.2 alpha allow remote attackers to cause a denial of service (daemon outage) by establishing and then immediately closing a TCP connection, leading to the accept function having an unexpected return value of None, an unexpected value of None for the address, or an ECONNABORTED, EAGAIN, or EWOULDBLOCK error, or the getpeername function having an ENOTCONN error, a related issue to CVE-2010-3492.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "19e9fefc660d623ce7c31fb008cde1157ae12aba"
                            },
                            {
                                "fixed": "5ea3d0f95b51009fa1c3409e7dd1c12006427ccc"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue6706"
            }
        ]
    },
    {
        "id": "PSF-2020-1",
        "summary": "xmlrpc gzip unlimited read",
        "details": "The gzip_decode function in the xmlrpc client library in Python 3.4 and earlier allows remote attackers to cause a denial of service (memory consumption) via a crafted HTTP request.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4e9cefaf86035f8014e09049328d197b6506532f"
                            },
                            {
                                "fixed": "9e8f523c5b1c354097753084054eadf14d33238d"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2013-1753"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue16043"
            }
        ]
    },
    {
        "id": "PSF-2024-6",
        "summary": "",
        "details": "CPython 3.9 and earlier doesn't disallow configuring an empty list (\"[]\") for SSLContext.set_npn_protocols() which is an invalid value for the underlying OpenSSL API. This results in a buffer over-read when NPN is used (see CVE-2024-5535 for OpenSSL). This vulnerability is of low severity due to NPN being not widely used and specifying an empty list likely being uncommon in-practice (typically a protocol name would be configured).",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "39258d3595300bc7b952854c915f63ae2d4b9c3e"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "WEB",
                "url": "https://jbp.io/2024/06/27/cve-2024-5535-openssl-memory-safety.html"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/23014"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/PLP2JI3PJY33YG6P5BZYSSNU66HASXBQ/"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/39258d3595300bc7b952854c915f63ae2d4b9c3e"
            },
            {
                "type": "WEB",
                "url": "http://www.openwall.com/lists/oss-security/2024/06/28/4"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/121227"
            },
            {
                "type": "WEB",
                "url": "https://security.netapp.com/advisory/ntap-20240726-0005/"
            }
        ]
    },
    {
        "id": "PSF-2011-3",
        "summary": "ssl CBC IV attack",
        "details": "The SSL protocol, as used in certain configurations in Microsoft Windows and Microsoft Internet Explorer, Mozilla Firefox, Google Chrome, Opera, and other products, encrypts data by using CBC mode with chained initialization vectors, which allows man-in-the-middle attackers to obtain plaintext HTTP headers via a blockwise chosen-boundary attack (BCBA) on an HTTPS session, in conjunction with JavaScript code that uses (1) the HTML5 WebSocket API, (2) the Java URLConnection API, or (3) the Silverlight WebClient API, aka a \"BEAST\" attack.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "d358e0554bc520768041652676ec8e6076f221a9"
                            },
                            {
                                "fixed": "f2bf8a6ac51530e14d798a03c8e950dd934d85cd"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue13885"
            }
        ]
    },
    {
        "id": "PSF-2016-1",
        "summary": "ssl.match_hostname() IDNA issue",
        "details": "The ssl.match_hostname function in CPython (aka Python) before 2.7.9 and 3.x before 3.3.3 does not properly handle wildcards in hostnames, which might allow man-in-the-middle attackers to spoof servers via a crafted certificate.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "72c98d3a761457a4f2b8054458b19f051dfb5886"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue17997"
            },
            {
                "type": "WEB",
                "url": "https://tools.ietf.org/html/rfc6125"
            }
        ]
    },
    {
        "id": "PSF-2023-4",
        "summary": "",
        "details": "The legacy email.utils.parseaddr function in Python through 3.11.4 allows attackers to trigger \"RecursionError: maximum recursion depth exceeded while calling a Python object\" via a crafted argument. This argument is plausibly an untrusted value from an application's input data that was supposed to contain a name and an e-mail address. NOTE: email.utils.parseaddr is categorized as a Legacy API in the documentation of the Python email package. Applications should instead use the email.parser.BytesParser or email.parser.Parser class. NOTE: the vendor's perspective is that this is neither a vulnerability nor a bug. The email package is intended to have size limits and to throw an exception when limits are exceeded; they were exceeded by the example demonstration code.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": []
    },
    {
        "id": "PSF-2012-6",
        "summary": "Vulnerability in the utf-16 decoder after error handling",
        "details": "The utf-16 decoder in Python 3.1 through 3.3 does not update the aligned_end variable after calling the unicode_decode_call_errorhandler function, which allows remote attackers to obtain sensitive information (process memory) or cause a denial of service (memory corruption and crash) via unspecified vectors.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "715a63b78349952ccc0fb3dd3139e2d822006d35"
                            },
                            {
                                "fixed": "b4bbee25b1e3f4bccac222f806b3138fb72439d6"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue14579"
            }
        ]
    },
    {
        "id": "PSF-2008-1",
        "summary": "Multiple integer overflows (Apple)",
        "details": "Multiple integer overflows in imageop.c in Python before 2.5.3 allow context-dependent attackers to cause a denial of service (crash) and possibly execute arbitrary code via crafted images that trigger heap-based buffer overflows.  NOTE: this issue is due to an incomplete fix for CVE-2007-4965.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3ce5d9207e66d61d4b0502cf47ed2d2bcdd2212f"
                            },
                            {
                                "fixed": "e7d8be80ba634fa15ece6f503c33592e0d333361"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://lists.apple.com/archives/security-announce/2009/Feb/msg00000.html"
            }
        ]
    },
    {
        "id": "PSF-2017-5",
        "summary": "Zlib 1.2.11",
        "details": "The crc32_big function in crc32.c in zlib 1.2.8 might allow context-dependent attackers to have unspecified impact via vectors involving big-endian CRC calculation.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "34e7e2ecb1741850190e78f42875480693d3537b"
                            },
                            {
                                "fixed": "80b24a9354c60f6b800d462c941c6d4cde3cf783"
                            },
                            {
                                "fixed": "d0e61bded5256e775e470e2c0da22367a1a81970"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue29169"
            }
        ]
    },
    {
        "id": "PSF-2013-2",
        "summary": "ssl: NULL in subjectAltNames",
        "details": "The ssl.match_hostname function in the SSL module in Python 2.6 through 3.4 does not properly handle a '\\0' character in a domain name in the Subject Alternative Name field of an X.509 certificate, which allows man-in-the-middle attackers to spoof arbitrary SSL servers via a crafted certificate issued by a legitimate Certification Authority, a related issue to CVE-2009-2408.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "82f88283171933127f20f866a7f98694b29cca56"
                            },
                            {
                                "fixed": "ec3c103520a5061e657581b388e2b8ba6f74602a"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue18709"
            }
        ]
    },
    {
        "id": "PSF-2014-3",
        "summary": "zipfile DoS using invalid file size",
        "details": "Python before 3.3.4 RC1 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a file size value larger than the size of the zip file to the (1) ZipExtFile.read, (2) ZipExtFile.read(n), (3) ZipExtFile.readlines, (4) ZipFile.extract, or (5) ZipFile.extractall function.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "5ce3f10aeea711bb912e948fa5d9f63736df1327"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue20078"
            }
        ]
    },
    {
        "id": "PSF-2019-14",
        "summary": "Regular Expression Denial of Service in http.cookiejar",
        "details": "The regex ``http.cookiejar.LOOSE_HTTP_DATE_RE`` is vulnerable to regular\nexpression denial of service (\"REDoS\"). ``LOOSE_HTTP_DATE_RE.match()`` is\ncalled when using ``http.cookiejar.CookieJar`` to parse ``Set-Cookie``\nheaders returned by a HTTP server. Processing a response from a malicious\nHTTP server can lead to extreme CPU usage and execution will be blocked\nfor a long time.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0716056c49e9505041e30386dad9b2e788f67aaf"
                            },
                            {
                                "fixed": "1b779bfb8593739b11cbb988ef82a883ec9d077e"
                            },
                            {
                                "fixed": "55a6a16a46239a71b635584e532feb8b17ae7fdf"
                            },
                            {
                                "fixed": "a1e1be4c4969c7c20c8c958e5ab5279ae6a66a16"
                            },
                            {
                                "fixed": "cb6085138a845f8324adc011b65754acc2086cc0"
                            },
                            {
                                "fixed": "e6499033032d5b647e43a3b49da0c1c64b151743"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/CVE-2019-16935"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue38804"
            }
        ]
    },
    {
        "id": "PSF-2010-4",
        "summary": "audioop integer overflows",
        "details": "Multiple integer overflows in audioop.c in the audioop module in Python 2.6, 2.7, 3.1, and 3.2 allow context-dependent attackers to cause a denial of service (application crash) via a large fragment, as demonstrated by a call to audioop.lin2lin with a long string in the first argument, leading to a buffer overflow.  NOTE: this vulnerability exists because of an incorrect fix for CVE-2008-3143.5.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "7ceb497ae6f554274399bd9916ea5a21de443208"
                            },
                            {
                                "fixed": "ee289e6cd5c009e641ee970cfc67996d8f871221"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue8674"
            }
        ]
    },
    {
        "id": "PSF-2019-7",
        "summary": "CVE-2019-18348: CRLF injection via the host part of the url passed to urlopen()",
        "details": "An issue was discovered in urllib2 in Python 2.x through 2.7.17 and urllib in Python 3.x through 3.8.0. CRLF injection is possible if the attacker controls a url parameter, as demonstrated by the first argument to urllib.request.urlopen with \\r\\n (specifically in the host component of a URL) followed by an HTTP header. This is similar to the CVE-2019-9740 query string issue and the CVE-2019-9947 path string issue. (This is not exploitable when glibc has CVE-2016-10739 fixed.). This is fixed in: v2.7.18, v2.7.18rc1; v3.5.10, v3.5.10rc1; v3.6.11, v3.6.11rc1, v3.6.12; v3.7.8, v3.7.8rc1, v3.7.9; v3.8.3, v3.8.3rc1, v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "09d8172837b6985c4ad90ee025f6b5a554a9f0ac"
                            },
                            {
                                "fixed": "34f85af3229f86c004a954c3f261ceea1f5e9f95"
                            },
                            {
                                "fixed": "83fc70159b24f5b11a5ef87c9b05c2cf4c7faeba"
                            },
                            {
                                "fixed": "9165addc22d05e776a54319a8531ebd0b2fe01ef"
                            },
                            {
                                "fixed": "e176e0c105786e9f476758eb5438c57223b65e7f"
                            },
                            {
                                "fixed": "ff69c9d12c1b06af58e5eae5db4630cedd94740e"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue38576"
            }
        ]
    },
    {
        "id": "PSF-2020-2",
        "summary": "Infinite loop in tarfile module while opening a crafted file",
        "details": "In Lib/tarfile.py in Python through 3.8.3, an attacker is able to craft a TAR archive leading to an infinite loop when opened by tarfile.open, because _proc_pax lacks header validation.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "47a2955589bdb1a114d271496ff803ad73f954b8"
                            },
                            {
                                "fixed": "5a8d121a1f3ef5ad7c105ee378cc79a3eac0c7d4"
                            },
                            {
                                "fixed": "79c6b602efc9a906c8496f3d5f4d54c54b48fa06"
                            },
                            {
                                "fixed": "c55479556db015f48fc8bbca17f64d3e65598559"
                            },
                            {
                                "fixed": "cac9ca8ed99bd98f4c0dcd1913a146192bf5ee84"
                            },
                            {
                                "fixed": "f3232294ee695492f43d424cc6969d018d49861d"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue39017"
            }
        ]
    },
    {
        "id": "PSF-2024-5",
        "summary": "",
        "details": "The \u201cipaddress\u201d module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as \u201cglobally reachable\u201d or \u201cprivate\u201d. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn\u2019t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.\n\nCPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "22adf29da8d99933ffed8647d3e0726edd16f7f8"
                            },
                            {
                                "fixed": "40d75c2b7f5c67e254d0a025e0f2e2c7ada7f69f"
                            },
                            {
                                "fixed": "895f7e2ac23eff4743143beef0f0c5ac71ea27d3"
                            },
                            {
                                "fixed": "ba431579efdcbaed7a96f2ac4ea0775879a332fb"
                            },
                            {
                                "fixed": "c62c9e518b784fe44432a3f4fc265fb95b651906"
                            },
                            {
                                "fixed": "f86b17ac511e68192ba71f27e752321a3252cee3"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/113171"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/113179"
            },
            {
                "type": "WEB",
                "url": "https://www.iana.org/assignments/iana-ipv4-special-registry/iana-ipv4-special-registry.xhtml"
            },
            {
                "type": "WEB",
                "url": "https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/NRUHDUS2IV2USIZM2CVMSFL6SCKU3RZA/"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/22adf29da8d99933ffed8647d3e0726edd16f7f8"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/40d75c2b7f5c67e254d0a025e0f2e2c7ada7f69f"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/895f7e2ac23eff4743143beef0f0c5ac71ea27d3"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/ba431579efdcbaed7a96f2ac4ea0775879a332fb"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/c62c9e518b784fe44432a3f4fc265fb95b651906"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/f86b17ac511e68192ba71f27e752321a3252cee3"
            },
            {
                "type": "WEB",
                "url": "http://www.openwall.com/lists/oss-security/2024/06/17/3"
            },
            {
                "type": "WEB",
                "url": "https://security.netapp.com/advisory/ntap-20240726-0004/"
            }
        ]
    },
    {
        "id": "PSF-2018-3",
        "summary": "difflib and poplib catastrophic backtracking",
        "details": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in pop3lib's apop() method. An attacker could use this flaw to cause denial of service.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0902a2d6b2d1d9dbde36aeaaccf1788ceaa97143"
                            },
                            {
                                "fixed": "0e6c8ee2358a2e23117501826c008842acb835ac"
                            },
                            {
                                "fixed": "937ac1fe069a4dc8471dff205f553d82e724015b"
                            },
                            {
                                "fixed": "942cc04ae44825ea120e3a19a80c9b348b8194d0"
                            },
                            {
                                "fixed": "c9516754067d71fd7429a25ccfcb2141fc583523"
                            },
                            {
                                "fixed": "e052d40cea15f582b50947f7d906b39744dc62a2"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue32981"
            }
        ]
    },
    {
        "id": "PSF-2016-2",
        "summary": "Expat 2.2 (Expat bug #537)",
        "details": "Expat allows context-dependent attackers to cause a denial of service (crash) or possibly execute arbitrary code via a malformed input document, which triggers a buffer overflow.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0e4571a68a7f48e8469ef05b04ba3463d3fd82c0"
                            },
                            {
                                "fixed": "23ec4b57e1359f9c539b8defc317542173ae087e"
                            },
                            {
                                "fixed": "2ada64d2a073f85f135461833952dbe8d656810d"
                            },
                            {
                                "fixed": "5ff7132313eb651107b179d20218dfe5d4e47f13"
                            },
                            {
                                "fixed": "71572bbe82aa0836c036d44d41c8269ba6a321be"
                            },
                            {
                                "fixed": "86b95370c45dedb8a56c9894372a43681de47a73"
                            },
                            {
                                "fixed": "8c797ed8a0fea5e3162b9415f13e270d4d5d9549"
                            },
                            {
                                "fixed": "91d171be45942d37a973b0675521b5159a96be31"
                            },
                            {
                                "fixed": "ab90986600ba7dea2aa41e5c1773791070725453"
                            },
                            {
                                "fixed": "ea1ab803ddc14ab02ffed50ecc5089897f259623"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://libexpat.github.io/doc/cve-2017-9233/"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue29591"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30694"
            },
            {
                "type": "WEB",
                "url": "https://bugs.python.org/issue30610"
            },
            {
                "type": "WEB",
                "url": "https://github.com/libexpat/libexpat/blob/R_2_2_1/expat/Changes"
            },
            {
                "type": "WEB",
                "url": "https://sourceforge.net/p/expat/bugs/537/"
            }
        ]
    },
    {
        "id": "PSF-2023-7",
        "summary": "Reference count issue in _asyncio._swap_current_task()",
        "details": "An issue in Python CPython 3.12.0b1 allows an attacker to obtain sensitive information via the _asyncio._swap_current_task() component.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "a474e04388c2ef6aca75c26cb70a1b6200235feb"
                            },
                            {
                                "fixed": "d2cbb6e918d9ea39f0dd44acb53270f2dac07454"
                            },
                            {
                                "fixed": "9e6f8d46150c1a0af09d68ce63c603cf321994aa"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-38898"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/issues/105987"
            }
        ]
    },
    {
        "id": "PSF-2008-2",
        "summary": "Multiple integer overflows (Apple)",
        "details": "Integer signedness error in the zlib extension module in Python 2.5.2 and earlier allows remote attackers to execute arbitrary code via a negative signed integer, which triggers insufficient memory allocation and a buffer overflow.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3ce5d9207e66d61d4b0502cf47ed2d2bcdd2212f"
                            },
                            {
                                "fixed": "e7d8be80ba634fa15ece6f503c33592e0d333361"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://lists.apple.com/archives/security-announce/2009/Feb/msg00000.html"
            }
        ]
    },
    {
        "id": "PSF-2012-5",
        "summary": "Hash DoS",
        "details": "Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "1e13eb084f72d5993cbb726e45b36bdb69c83a24"
                            },
                            {
                                "fixed": "2daf6ae2495c862adf8bc717bfe9964081ea0b10"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "http://www.ocert.org/advisories/ocert-2011-003.html"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue13703"
            },
            {
                "type": "WEB",
                "url": "https://events.ccc.de/congress/2011/Fahrplan/events/4680.en.html"
            }
        ]
    },
    {
        "id": "PSF-2017-6",
        "summary": "PyString_DecodeEscape integer overflow",
        "details": "CPython (aka Python) up to 2.7.13 is vulnerable to an integer overflow in the PyString_DecodeEscape function in stringobject.c, resulting in heap-based buffer overflow (and possible arbitrary code execution)",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "6c004b40f9d51872d848981ef1a18bb08c2dfc42"
                            },
                            {
                                "fixed": "c3c9db89273fabc62ea1b48389d9a3000c1c03ae"
                            },
                            {
                                "fixed": "fd8614c5c5466a14a945db5b059c10c0fb8f76d9"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30657"
            }
        ]
    },
    {
        "id": "PSF-2022-3",
        "summary": "Windows: vulnerable zlib 1.2.11",
        "details": "zlib before 1.2.12 allows memory corruption when deflating (i.e., when compressing) if the input has many distant matches.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0f0f85e9d8088eb789cda35477900df32adff546"
                            },
                            {
                                "fixed": "16a809ffb7af14898ce9ec8165960d96cbcd4ec3"
                            },
                            {
                                "fixed": "387f93c156288c170ff0016a75af06e109d48ee1"
                            },
                            {
                                "fixed": "7ccdec3d1d837b910cd4fc5525ecde71a1326202"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2018-25032"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue47194"
            }
        ]
    },
    {
        "id": "PSF-2013-1",
        "summary": "ssl.match_hostname() wildcard DoS",
        "details": "Algorithmic complexity vulnerability in the ssl.match_hostname function in Python 3.2.x, 3.3.x, and earlier, and unspecified versions of python-backports-ssl_match_hostname as used for older Python versions, allows remote attackers to cause a denial of service (CPU consumption) via multiple wildcard characters in the common name in a certificate.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "86d53caddad11808ca332ab93ec35508b602a0dd"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue17980"
            }
        ]
    },
    {
        "id": "PSF-2017-10",
        "summary": "urllib FTP protocol stream injection",
        "details": "FTP protocol stream injection via malicious URLs.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "19b2890014d3098147d16475c492a47a43893768"
                            },
                            {
                                "fixed": "2a5a26c87e82c7d9a348792891feccd1b5e9a769"
                            },
                            {
                                "fixed": "2b1e6e9696cb433c0e0da11145157d54275d119f"
                            },
                            {
                                "fixed": "8c2d4cf092c5f0335e7982392a33927579c4d512"
                            },
                            {
                                "fixed": "a4e774f86224cd8c997deaa4e71312cf1a7b023c"
                            },
                            {
                                "fixed": "e5eae474c431af2880a68f6329840b9288fc4bc1"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30119"
            },
            {
                "type": "WEB",
                "url": "http://blog.blindspotsecurity.com/2017/02/advisory-javapython-ftp-injections.html"
            },
            {
                "type": "WEB",
                "url": "http://www.openwall.com/lists/oss-security/2017/02/20/1"
            },
            {
                "type": "WEB",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1478916"
            }
        ]
    },
    {
        "id": "PSF-2024-9",
        "summary": "",
        "details": "There is a LOW severity vulnerability affecting CPython, specifically the\n'http.cookies' standard library module.\n\n\nWhen parsing cookies that contained backslashes for quoted characters in\nthe cookie value, the parser would use an algorithm with quadratic\ncomplexity, resulting in excess CPU resources being used while parsing the\nvalue.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/123075"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/123067"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/HXJAAAALNUNGCQUS2W7WR6GFIZIHFOOK/"
            }
        ]
    },
    {
        "id": "PSF-2016-10",
        "summary": "gettext.c2py()",
        "details": "Arbitrary code execution in ``gettext.c2py()``.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "07bcf05fcf3fd1d4001e8e3489162e6d67638285"
                            },
                            {
                                "fixed": "a8760275bd59fb8d8be1f1bf05313fed31c08321"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue28563"
            },
            {
                "type": "WEB",
                "url": "https://www.xil.se/post/is-eval-safe-yet-rspkt/"
            }
        ]
    },
    {
        "id": "PSF-2024-8",
        "summary": "",
        "details": "There is a MEDIUM severity vulnerability affecting CPython.\n\nThe \nemail module didn\u2019t properly quote newlines for email headers when \nserializing an email message allowing for header injection when an email\n is serialized.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4766d1200fdf8b6728137aa2927a297e224d5fa7"
                            },
                            {
                                "fixed": "4aaa4259b5a6e664b7316a4d60bdec7ee0f124d0"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/122233"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/121650"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/QH3BUOE2DYQBWP7NAQ7UNHPPOELKISRW/"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/4766d1200fdf8b6728137aa2927a297e224d5fa7"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/4aaa4259b5a6e664b7316a4d60bdec7ee0f124d0"
            }
        ]
    },
    {
        "id": "PSF-2017-11",
        "summary": "Expat 2.2.3",
        "details": "Expat 2.2.2 was released with multiple security fixes:\n\n* #43: Protect against compilation without any source of high quality\n  entropy enabled, e.g. with CMake build system\n* #60: Windows with _UNICODE: Unintended use of LoadLibraryW with a non-wide\n  string resulted in failure to load advapi32.dll and degradation in quality\n  of used entropy when compiled with _UNICODE for Windows; you can launch\n  existing binaries with EXPAT_ENTROPY_DEBUG=1 in the environment to inspect\n  the quality of entropy used during runtime\n* [MOX-006]: Fix non-NULL parser parameter validation in XML_Parse; resulted\n  in NULL dereference, previously\n\nExpat 2.2.3 contains an additional security fix: #82: CVE-2017-11742 --\nWindows: Fix DLL hijacking vulnerability using Steve Holme's LoadLibrary\nwrapper for/of cURL\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "297516ea509c72d8ebed3a9b3ce200f023aca0b7"
                            },
                            {
                                "fixed": "83e37e16f3065086d721d4e62a3788e01db3431c"
                            },
                            {
                                "fixed": "86a713cb0c110b6798ca7f9e630fc511ee0a4028"
                            },
                            {
                                "fixed": "93d0cb58b4da2a88c56f472c6c19491cc7a390df"
                            },
                            {
                                "fixed": "ec4ab09b7c0b5070bdb27351f979cbecc4636245"
                            },
                            {
                                "fixed": "f2492bb6aae061aea47e21fc7e56b7ab9bfdf543"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30947"
            }
        ]
    },
    {
        "id": "PSF-2022-2",
        "summary": "Buffer overflow vulnerability in os.symlink on Windows",
        "details": "Python Software Foundation CPython version From 3.2 until 3.6.4 on Windows contains a Buffer Overflow vulnerability in os.symlink() function on Windows that can result in Arbitrary code execution, likely escalation of privilege. This attack appears to be exploitable via a python script that creates a symlink with an attacker controlled name or location. This vulnerability appears to have been fixed in 3.7.0 and 3.6.5.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "6921e73e33edc3c61bc2d78ed558eaa22a89a564"
                            },
                            {
                                "fixed": "77c02cdce2d7b8360771be35b7676a4977e070c1"
                            },
                            {
                                "fixed": "96fdbacb7797a564249fd59ccf86ec153c4bb095"
                            },
                            {
                                "fixed": "baa45079466eda1f5636a6d13f3a60c2c00fdcd3"
                            },
                            {
                                "fixed": "f381cfe07d15d52f27de771a62a8167668f0dd51"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/mm3/archives/list/security-announce@python.org/thread/PVSURQ2YCNZODILA3QE7ZF3GCD25EVVT/"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue33001"
            }
        ]
    },
    {
        "id": "PSF-2017-7",
        "summary": "Expat 2.2.1",
        "details": "XML External Entity vulnerability in libexpat 2.2.0 and earlier (Expat XML Parser Library) allows attackers to put the parser in an infinite loop using a malformed external entity definition from an external DTD.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "2ada64d2a073f85f135461833952dbe8d656810d"
                            },
                            {
                                "fixed": "5ff7132313eb651107b179d20218dfe5d4e47f13"
                            },
                            {
                                "fixed": "71572bbe82aa0836c036d44d41c8269ba6a321be"
                            },
                            {
                                "fixed": "91d171be45942d37a973b0675521b5159a96be31"
                            },
                            {
                                "fixed": "ab90986600ba7dea2aa41e5c1773791070725453"
                            },
                            {
                                "fixed": "ea1ab803ddc14ab02ffed50ecc5089897f259623"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://libexpat.github.io/doc/cve-2017-9233/"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30694"
            },
            {
                "type": "WEB",
                "url": "https://github.com/libexpat/libexpat/blob/R_2_2_1/expat/Changes"
            }
        ]
    },
    {
        "id": "PSF-2008-3",
        "summary": "Multiple integer overflows (Apple)",
        "details": "Python 2.5.2 and earlier allows context-dependent attackers to execute arbitrary code via multiple vectors that cause a negative size value to be provided to the PyString_FromStringAndSize function, which allocates less memory than expected when assert() is disabled and triggers a buffer overflow.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3ce5d9207e66d61d4b0502cf47ed2d2bcdd2212f"
                            },
                            {
                                "fixed": "e7d8be80ba634fa15ece6f503c33592e0d333361"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://lists.apple.com/archives/security-announce/2009/Feb/msg00000.html"
            }
        ]
    },
    {
        "id": "PSF-2012-4",
        "summary": "Expat 2.2.1",
        "details": "The XML parser (xmlparse.c) in expat before 2.1.0 computes hash values without restricting the ability to trigger hash collisions predictably, which allows context-dependent attackers to cause a denial of service (CPU consumption) via an XML file with many identifiers with the same value.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "2ada64d2a073f85f135461833952dbe8d656810d"
                            },
                            {
                                "fixed": "5ff7132313eb651107b179d20218dfe5d4e47f13"
                            },
                            {
                                "fixed": "71572bbe82aa0836c036d44d41c8269ba6a321be"
                            },
                            {
                                "fixed": "91d171be45942d37a973b0675521b5159a96be31"
                            },
                            {
                                "fixed": "ab90986600ba7dea2aa41e5c1773791070725453"
                            },
                            {
                                "fixed": "ea1ab803ddc14ab02ffed50ecc5089897f259623"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://libexpat.github.io/doc/cve-2017-9233/"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue30694"
            },
            {
                "type": "WEB",
                "url": "https://github.com/libexpat/libexpat/blob/R_2_2_1/expat/Changes"
            }
        ]
    },
    {
        "id": "PSF-2023-6",
        "summary": "hmac.compare_digest() accumulator not constant-time",
        "details": "An issue was discovered in compare_digest in Lib/hmac.py in Python through 3.9.1. Constant-time-defeating optimisations were possible in the accumulator variable in hmac.compare_digest.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "31729366e2bc09632e78f3896dbce0ae64914f28"
                            },
                            {
                                "fixed": "c1bbca5b004b3f74d240ef8a76ff445cc1a27efb"
                            },
                            {
                                "fixed": "97136d71a78a4b6b816f7e14acc52be426efcb6f"
                            },
                            {
                                "fixed": "db95802bdfac4d13db3e2a391ec7b9e2f8d92dbe"
                            },
                            {
                                "fixed": "8bef9ebb1b88cfa4b2a38b93fe4ea22015d8254a"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-48566"
            },
            {
                "type": "WEB",
                "url": "https://bugs.python.org/issue40791"
            }
        ]
    },
    {
        "id": "PSF-2016-3",
        "summary": "smtplib TLS stripping",
        "details": "The smtplib library in CPython (aka Python) before 2.7.12, 3.x before 3.4.5, and 3.5.x before 3.5.2 does not return an error when StartTLS fails, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a \"StartTLS stripping attack.\"",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "2e1b7fc998e1744eeb3bb31b131eba0145b88a2f"
                            },
                            {
                                "fixed": "3625f7fd11679ecb390ffa58ef36d487acc8159b"
                            },
                            {
                                "fixed": "46b32f307c48bcb999b22eebf65ffe8ed5cca544"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2016-0772"
            },
            {
                "type": "WEB",
                "url": "http://seclists.org/oss-sec/2016/q2/541"
            }
        ]
    },
    {
        "id": "PSF-2018-2",
        "summary": "Python 2.7 readahead is not thread safe",
        "details": "Python 2.7.14 is vulnerable to a Heap-Buffer-Overflow as well as a Heap-Use-After-Free. Python versions prior to 2.7.14 may also be vulnerable and it appears that Python 2.7.17 and prior may also be vulnerable however this has not been confirmed. The vulnerability lies when multiply threads are handling large amounts of data. In both cases there is essentially a race condition that occurs. For the Heap-Buffer-Overflow, Thread 2 is creating the size for a buffer, but Thread1 is already writing to the buffer without knowing how much to write. So when a large amount of data is being processed, it is very easy to cause memory corruption using a Heap-Buffer-Overflow. As for the Use-After-Free, Thread3->Malloc->Thread1->Free's->Thread2-Re-uses-Free'd Memory. The PSRT has stated that this is not a security vulnerability due to the fact that the attacker must be able to run code, however in some situations, such as function as a service, this vulnerability can potentially be used by an attacker to violate a trust boundary, as such the DWF feels this issue deserves a CVE.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "dbf52e02f18dac6f5f0a64f78932f3dc6efc056b"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2018-1000030"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue31530"
            }
        ]
    },
    {
        "id": "PSF-2011-1",
        "summary": "CGI directory traversal (is_cgi() function)",
        "details": "The is_cgi method in CGIHTTPServer.py in the CGIHTTPServer module in Python 2.5, 2.6, and 3.0 allows remote attackers to read script source code via an HTTP GET request that lacks a / (slash) character at the beginning of the URI.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "923ba361d8f757f0656cfd216525aca4848e02aa"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue2254"
            }
        ]
    },
    {
        "id": "PSF-2024-4",
        "summary": "",
        "details": "A defect was discovered in the Python \u201cssl\u201d module where there is a memory\nrace condition with the ssl.SSLContext methods \u201ccert_store_stats()\u201d and\n\u201cget_ca_certs()\u201d. The race condition can be triggered if the methods are\ncalled at the same time as certificates are loaded into the SSLContext,\nsuch as during the TLS handshake with a certificate directory configured.\nThis issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "01c37f1d0714f5822d34063ca7180b595abf589d"
                            },
                            {
                                "fixed": "29c97287d205bf2f410f4895ebce3f43b5160524"
                            },
                            {
                                "fixed": "37324b421b72b7bc9934e27aba85d48d4773002e"
                            },
                            {
                                "fixed": "542f3272f56f31ed04e74c40635a913fbc12d286"
                            },
                            {
                                "fixed": "b228655c227b2ca298a8ffac44d14ce3d22f6faa"
                            },
                            {
                                "fixed": "bce693111bff906ccf9281c22371331aaff766ab"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/114572"
            },
            {
                "type": "WEB",
                "url": "https://github.com/python/cpython/pull/114573"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/BMAK5BCGKYWNJOACVUSLUF6SFGBIM4VP/"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/01c37f1d0714f5822d34063ca7180b595abf589d"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/29c97287d205bf2f410f4895ebce3f43b5160524"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/37324b421b72b7bc9934e27aba85d48d4773002e"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/542f3272f56f31ed04e74c40635a913fbc12d286"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/b228655c227b2ca298a8ffac44d14ce3d22f6faa"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/bce693111bff906ccf9281c22371331aaff766ab"
            },
            {
                "type": "WEB",
                "url": "http://www.openwall.com/lists/oss-security/2024/06/17/2"
            }
        ]
    },
    {
        "id": "PSF-2020-3",
        "summary": "[CVE-2020-14422] Hash collisions in IPv4Interface and IPv6Interface",
        "details": "Lib/ipaddress.py in Python through 3.8.3 improperly computes hash values in the IPv4Interface and IPv6Interface classes, which might allow a remote attacker to cause a denial of service if an application is affected by the performance of a dictionary containing IPv4Interface or IPv6Interface objects, and this attacker can cause many dictionary entries to be created. This is fixed in: v3.5.10, v3.5.10rc1; v3.6.12; v3.7.9; v3.8.4, v3.8.4rc1, v3.8.5, v3.8.6, v3.8.6rc1; v3.9.0, v3.9.0b4, v3.9.0b5, v3.9.0rc1, v3.9.0rc2.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "11d258ceafdf60ab3840f9a5700f2d0ad3e2e2d1"
                            },
                            {
                                "fixed": "9a646aa82dfa62d70ca2a99ada901ee6cf9f82bd"
                            },
                            {
                                "fixed": "b30ee26e366bf509b7538d79bfec6c6d38d53f28"
                            },
                            {
                                "fixed": "b98e7790c77a4378ec4b1c71b84138cb930b69b7"
                            },
                            {
                                "fixed": "cfc7ff8d05f7a949a88b8a8dd506fb5c1c30d3e9"
                            },
                            {
                                "fixed": "dc8ce8ead182de46584cc1ed8a8c51d48240cbd5"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue41004"
            }
        ]
    },
    {
        "id": "PSF-2010-5",
        "summary": "audioop input validation",
        "details": "The audioop module in Python 2.7 and 3.2 does not verify the relationships between size arguments and byte string lengths, which allows context-dependent attackers to cause a denial of service (memory corruption and application crash) via crafted arguments, as demonstrated by a call to audioop.reverse with a one-byte string, a different vulnerability than CVE-2010-1634.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "8e42fb7ada3198e66d3f060c5c87c52465a86e36"
                            },
                            {
                                "fixed": "e9123efa21a16584758b5ce7da93d3966cf0cd81"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue7673"
            }
        ]
    },
    {
        "id": "PSF-2019-6",
        "summary": "Reflected XSS in DocXMLRPCServer",
        "details": "The documentation XML-RPC server in Python through 2.7.16, 3.x through 3.6.9, and 3.7.x through 3.7.4 has XSS via the server_title field. This occurs in Lib/DocXMLRPCServer.py in Python 2.x, and in Lib/xmlrpc/server.py in Python 3.x. If set_server_title is called with untrusted input, arbitrary JavaScript can be delivered to clients that visit the http URL for this server.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "1698cacfb924d1df452e78d11a4bf81ae7777389"
                            },
                            {
                                "fixed": "39a0c7555530e31c6941a78da19b6a5b61170687"
                            },
                            {
                                "fixed": "3fe1b19265b55c290fc956e9aafcf661803782de"
                            },
                            {
                                "fixed": "6447b9f9bd27e1f6b04cef674dd3a7ab27bf4f28"
                            },
                            {
                                "fixed": "8eb64155ff26823542ccf0225b3d57b6ae36ea89"
                            },
                            {
                                "fixed": "e8650a4f8c7fb76f570d4ca9c1fbe44e91c8dfaa"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue38243"
            }
        ]
    },
    {
        "id": "PSF-2014-2",
        "summary": "Hash function not randomized properly",
        "details": "Python 2.7 before 3.4 only uses the last eight bits of the prefix to randomize hash values, which causes it to compute hash values without restricting the ability to trigger hash collisions predictably and makes it easier for context-dependent attackers to cause a denial of service (CPU consumption) via crafted input to an application that maintains a hash table.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2012-1150.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "985ecdcfc29adfc36ce2339acf03f819ad414869"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue14621"
            }
        ]
    },
    {
        "id": "PSF-2019-15",
        "summary": "Remove newline characters from uu encoding methods",
        "details": "Filenames passed to the UU encoding methods (uu.py and uu_codec.py) that\ncontain a newline character will overflow data into the UU content section.\nThis can potentially be used to inject replace or corrupt data content in a\nfile during the decode process.\n\nThe fix removes newline characters from filenames.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "30afc91f5e70cf4748ffac77a419ba69ebca6f6a"
                            },
                            {
                                "fixed": "87f2d261ee1c63ed39517355833d087c5a78b4bf"
                            },
                            {
                                "fixed": "8835f465fa94f114dcf865429c0410821d365dae"
                            },
                            {
                                "fixed": "8859fc629474ab1ca7eb2e67aec538097c327e58"
                            },
                            {
                                "fixed": "a016d4e32cc9faa48105d00db275439c3dc93559"
                            },
                            {
                                "fixed": "a62ad4730c9b575f140f24074656c0257c86a09a"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue38945"
            }
        ]
    },
    {
        "id": "PSF-2020-8",
        "summary": "urllib basic auth regex denial of service",
        "details": "Python 2.7 through 2.7.17, 3.5 through 3.5.9, 3.6 through 3.6.10, 3.7 through 3.7.6, and 3.8 through 3.8.1 allows an HTTP server to conduct Regular Expression Denial of Service (ReDoS) attacks against a client because of urllib.request.AbstractBasicAuthHandler catastrophic backtracking.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0b297d4ff1c0e4480ad33acae793fbaf4bf015b4"
                            },
                            {
                                "fixed": "37fe316479e0b6906a74b0c0a5e495c55037fdfd"
                            },
                            {
                                "fixed": "69cdeeb93e0830004a495ed854022425b93b3f3e"
                            },
                            {
                                "fixed": "b57a73694e26e8b2391731b5ee0b1be59437388e"
                            },
                            {
                                "fixed": "ea9e240aa02372440be8024acb110371f69c9d41"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue38826"
            },
            {
                "type": "WEB",
                "url": "https://bugs.python.org/issue39503"
            }
        ]
    },
    {
        "id": "PSF-2016-8",
        "summary": "HTTP header injection",
        "details": "CRLF injection vulnerability in the HTTPConnection.putheader function in urllib2 and urllib in CPython (aka Python) before 2.7.10 and 3.x before 3.4.4 allows remote attackers to inject arbitrary HTTP headers via CRLF sequences in a URL.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "59bdf6392de446de8a19bfa37cee52981612830e"
                            },
                            {
                                "fixed": "8e88f6b5e2a35ee458c161aa3f2b7f1f17fb45d1"
                            },
                            {
                                "fixed": "a112a8ae47813f75aa8ad27ee8c42a7c2e937d13"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue22928"
            },
            {
                "type": "WEB",
                "url": "http://blog.blindspotsecurity.com/2016/06/advisory-http-header-injection-in.html"
            }
        ]
    },
    {
        "id": "PSF-2008-8",
        "summary": "Multiple integer overflows (Apple)",
        "details": "Multiple integer overflows in the PyOS_vsnprintf function in Python/mysnprintf.c in Python 2.5.2 and earlier allow context-dependent attackers to cause a denial of service (memory corruption) or have unspecified other impact via crafted input to string formatting operations.  NOTE: the handling of certain integer values is also affected by related integer underflows and an off-by-one error.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3ce5d9207e66d61d4b0502cf47ed2d2bcdd2212f"
                            },
                            {
                                "fixed": "e7d8be80ba634fa15ece6f503c33592e0d333361"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://lists.apple.com/archives/security-announce/2009/Feb/msg00000.html"
            }
        ]
    },
    {
        "id": "PSF-2022-9",
        "summary": "Linux specific local privilege escalation via the multiprocessing forkserver start method",
        "details": "Python 3.9.x before 3.9.16 and 3.10.x before 3.10.9 on Linux allows local privilege escalation in a non-default configuration. The Python multiprocessing library, when used with the forkserver start method on Linux, allows pickles to be deserialized from any user in the same machine local network namespace, which in many system configurations means any user on the same machine. Pickles can execute arbitrary code. Thus, this allows for local user privilege escalation to the user that any forkserver process is running as. Setting multiprocessing.util.abstract_sockets_supported to False is a workaround. The forkserver start method for multiprocessing is not the default start method. This issue is Linux specific because only Linux supports abstract namespace sockets. CPython before 3.9 does not make use of Linux abstract namespace sockets by default. Support for users manually specifying an abstract namespace socket was added as a bugfix in 3.7.8 and 3.8.3, but users would need to make specific uncommon API calls in order to do that in CPython before 3.9.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4c0c1e201a896ee5141df9a698e8a94aad2d5e6d"
                            },
                            {
                                "fixed": "b43496c01a554cf41ae654a0379efae18609ad39"
                            },
                            {
                                "fixed": "eae692eed18892309bcc25a2c0f8980038305ea2"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2138705"
            },
            {
                "type": "ADVISORY",
                "url": "https://bugzilla.suse.com/show_bug.cgi?id=1204886"
            },
            {
                "type": "ADVISORY",
                "url": "https://ubuntu.com/security/notices/USN-5713-1"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/97514"
            }
        ]
    },
    {
        "id": "PSF-2014-5",
        "summary": "os.makedirs() not thread-safe",
        "details": "Race condition in the _get_masked_mode function in Lib/os.py in Python 3.2 through 3.5, when exist_ok is set to true and multiple threads are used, might allow local users to bypass intended file permissions by leveraging a separate application vulnerability before the umask has been set to the expected value.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "ee5f1c13d1ea21c628068fdf142823177f5526c2"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue21082"
            }
        ]
    },
    {
        "id": "PSF-2007-1",
        "summary": "rgbimg and imageop overflows",
        "details": "Multiple integer overflows in the imageop module in Python 2.5.1 and earlier allow context-dependent attackers to cause a denial of service (application crash) and possibly obtain sensitive information (memory contents) via crafted arguments to (1) the tovideo method, and unspecified other vectors related to (2) imageop.c, (3) rbgimgmodule.c, and other files, which trigger heap-based buffer overflows.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4df1b6d478020ac51c84467f47e42083f53adbad"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue1179"
            },
            {
                "type": "WEB",
                "url": "http://bugs.python.org/issue8678"
            },
            {
                "type": "WEB",
                "url": "http://seclists.org/fulldisclosure/2007/Sep/279"
            },
            {
                "type": "WEB",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=541698"
            }
        ]
    },
    {
        "id": "PSF-2019-12",
        "summary": "urllib module local_file:// scheme",
        "details": "urllib in Python 2.x through 2.7.16 supports the local_file: scheme, which makes it easier for remote attackers to bypass protection mechanisms that blacklist file: URIs, as demonstrated by triggering a urllib.urlopen('local_file:///etc/passwd') call.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0c2b6a3943aa7b022e8eb4bfd9bffcddebf9a587"
                            },
                            {
                                "fixed": "34bab215596671d0dec2066ae7d7450cd73f638b"
                            },
                            {
                                "fixed": "4f06dae5d8d4400ba38d8502da620f07d4a5696e"
                            },
                            {
                                "fixed": "4fe82a8eef7aed60de05bfca0f2c322730ea921e"
                            },
                            {
                                "fixed": "b15bde8058e821b383d81fcae68b335a752083ca"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue35907"
            }
        ]
    },
    {
        "id": "PSF-2019-1",
        "summary": "smtplib unlimited read",
        "details": "The smtplib module doesn't limit the amount of read data in\nits call to readline(). An erroneous or malicious SMTP server can trick the\nsmtplib module to consume large amounts of memory.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "16d63202af35dadd652a5e3eae687ea709e95b11"
                            },
                            {
                                "fixed": "210ee47e3340d8e689d8cce584e7c918d368f16b"
                            },
                            {
                                "fixed": "2585e1e48abb3013abeb8a1fe9dccb5f79ac4091"
                            },
                            {
                                "fixed": "42faa55124abcbb132c57745dec9e0489ac74406"
                            },
                            {
                                "fixed": "b3ac84322fe6dd542aa755779cdbc155edca8064"
                            },
                            {
                                "fixed": "c9cb18d3f7e5bf03220c213183ff0caa75905bdd"
                            },
                            {
                                "fixed": "d7b6ac66c1b81d13f2efa8d9ebba69e17c158c0a"
                            },
                            {
                                "fixed": "dabfc56b57f5086eb5522d8e6cd7670c62d2482d"
                            },
                            {
                                "fixed": "eaca8616ab0e219ebb5cf37d495f4bf336ec0f5e"
                            },
                            {
                                "fixed": "faad6bbea6c86e30c770eb0a3648e2cd52b2e55e"
                            },
                            {
                                "fixed": "ff1bbba92aad261df1ebd8fd8cc189c104e113b0"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2013-1752"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue16038"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue16039"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue16040"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue16041"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue16042"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue6791"
            }
        ]
    },
    {
        "id": "PSF-2023-11",
        "summary": "Use-after-free in heappushpop() of heapq module",
        "details": "A use-after-free exists in Python through 3.9 via heappushpop in heapq.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "79f89e6e5a659846d1068e8b1bd8e491ccdef861"
                            },
                            {
                                "fixed": "958064f8d2b84062b0582bbae911df8ccfc11fd6"
                            },
                            {
                                "fixed": "993811ffe75c2573f97fb3fd1414b34609b8c8db"
                            },
                            {
                                "fixed": "c563f409ea30bcb0623d785428c9257917371b76"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://www.cve.org/CVERecord?id=CVE-2022-48560"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue39421"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/pull/18118"
            }
        ]
    },
    {
        "id": "PSF-2010-2",
        "summary": "rgbimg and imageop overflows",
        "details": "Integer overflow in rgbimgmodule.c in the rgbimg module in Python 2.5 allows remote attackers to have an unspecified impact via a large image that triggers a buffer overflow.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2008-3143.12.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4df1b6d478020ac51c84467f47e42083f53adbad"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue1179"
            },
            {
                "type": "WEB",
                "url": "http://bugs.python.org/issue8678"
            },
            {
                "type": "WEB",
                "url": "http://seclists.org/fulldisclosure/2007/Sep/279"
            },
            {
                "type": "WEB",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=541698"
            }
        ]
    },
    {
        "id": "PSF-2020-4",
        "summary": "Py_SetPath(): _Py_CheckPython3 uses uninitialized DLL path",
        "details": "In Python 3.6 through 3.6.10, 3.7 through 3.7.8, 3.8 through 3.8.4rc1, and 3.9 through 3.9.0b4 on Windows, a Trojan horse python3.dll might be used in cases where CPython is embedded in a native application. This occurs because python3X.dll may use an invalid search path for python3.dll loading (after Py_SetPath has been used). NOTE: this issue CANNOT occur when using python.exe from a standard (non-embedded) Python installation on Windows.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "110dd153662a13b8ae1bb06348e5b1f118ab26d7"
                            },
                            {
                                "fixed": "46cbf6148a46883110883488d3e9febbe46ba861"
                            },
                            {
                                "fixed": "4981fe36c7477303de830e8dca929a02caaaffe4"
                            },
                            {
                                "fixed": "aa7f7756149a10c64d01f583b71e91814db886ab"
                            },
                            {
                                "fixed": "dcbaa1b49cd9062fb9ba2b9d49555ac6cd8c60b5"
                            },
                            {
                                "fixed": "f205f1000a2d7f8b044caf281041b3705f293480"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue29778"
            }
        ]
    },
    {
        "id": "PSF-2015-1",
        "summary": "Issue #26556: Expat 2.1.1",
        "details": "Multiple integer overflows in the XML_GetBuffer function in Expat through 2.1.0, as used in Google Chrome before 44.0.2403.89 and other products, allow remote attackers to cause a denial of service (heap-based buffer overflow) or possibly have unspecified other impact via crafted XML data, a related issue to CVE-2015-2716.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "196d7db3956f4c0b03e87b570771b3460a61bab5"
                            },
                            {
                                "fixed": "ab90986600ba7dea2aa41e5c1773791070725453"
                            },
                            {
                                "fixed": "d244a8f7cb0ec6979ec9fc7acd39e95f5339ad0e"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue26556"
            },
            {
                "type": "WEB",
                "url": "https://sourceforge.net/p/expat/bugs/528/"
            }
        ]
    },
    {
        "id": "PSF-2024-3",
        "summary": "",
        "details": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "81939dad77001556c527485d31a2d0f4a759033e"
                            },
                            {
                                "fixed": "8ed546679524140d8282175411fd141fe7df070d"
                            },
                            {
                                "fixed": "35c799d79177b962ddace2fa068101465570a29a"
                            },
                            {
                                "fixed": "5130731c9e779b97d00a24f54cdce73ce9975dfd"
                            },
                            {
                                "fixed": "66f8bb76a15e64a1bb7688b177ed29e26230fdee"
                            },
                            {
                                "fixed": "6d0850c4c8188035643586ab4d8ec2468abd699e"
                            },
                            {
                                "fixed": "91e3669e01245185569d09e9e6e11641282971ee"
                            },
                            {
                                "fixed": "94591dca510c796c7d40e9b4167ea56f2fdf28ca"
                            },
                            {
                                "fixed": "c8f868dc52f98011d0f9b459b6487920bfb0ac4d"
                            },
                            {
                                "fixed": "d86b49411753bf2c83291e3a14ae43fefded2f84"
                            },
                            {
                                "fixed": "e1dfa978b1ad210d551385ad8073ec6154f53763"
                            },
                            {
                                "fixed": "eb29e2f5905da93333d1ce78bc98b151e763ff46"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/PRGS5OR3N3PNPT4BMV2VAGN5GMUI5636/"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/118486"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/81939dad77001556c527485d31a2d0f4a759033e"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/8ed546679524140d8282175411fd141fe7df070d"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/35c799d79177b962ddace2fa068101465570a29a"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/5130731c9e779b97d00a24f54cdce73ce9975dfd"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/66f8bb76a15e64a1bb7688b177ed29e26230fdee"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/6d0850c4c8188035643586ab4d8ec2468abd699e"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/91e3669e01245185569d09e9e6e11641282971ee"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/94591dca510c796c7d40e9b4167ea56f2fdf28ca"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/c8f868dc52f98011d0f9b459b6487920bfb0ac4d"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/d86b49411753bf2c83291e3a14ae43fefded2f84"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/e1dfa978b1ad210d551385ad8073ec6154f53763"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/eb29e2f5905da93333d1ce78bc98b151e763ff46"
            },
            {
                "type": "WEB",
                "url": "https://security.netapp.com/advisory/ntap-20240705-0005/"
            }
        ]
    },
    {
        "id": "PSF-2018-5",
        "summary": "_elementree C accelerator doesn't call XML_SetHashSalt()",
        "details": "Python's elementtree C accelerator failed to initialise Expat's hash salt during initialization. This could make it easy to conduct denial of service attacks against Expat by constructing an XML document that would cause pathological hash collisions in Expat's internal data structures, consuming large amounts CPU and RAM. The vulnerability exists in Python versions 3.7.0, 3.6.0 through 3.6.6, 3.5.0 through 3.5.6, 3.4.0 through 3.4.9, 2.7.0 through 2.7.15.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "18b20bad75b4ff0486940fba4ec680e96e70f3a2"
                            },
                            {
                                "fixed": "41b48e71ac8a71f56694b548f118bd20ce203410"
                            },
                            {
                                "fixed": "470a435f3b42c9be5fdb7f7b04f3df5663ba7305"
                            },
                            {
                                "fixed": "cb5778f00ce48631c7140f33ba242496aaf7102b"
                            },
                            {
                                "fixed": "d16eaf36795da48b930b80b20d3805bc27820712"
                            },
                            {
                                "fixed": "f7666e828cc3d5873136473ea36ba2013d624fa1"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue34623"
            },
            {
                "type": "WEB",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1632095"
            }
        ]
    },
    {
        "id": "PSF-2016-4",
        "summary": "Sweet32 attack (DES, 3DES)",
        "details": "The DES and Triple DES ciphers, as used in the TLS, SSH, and IPSec protocols and other protocols and products, have a birthday bound of approximately four billion blocks, which makes it easier for remote attackers to obtain cleartext data via a birthday attack against a long-duration encrypted session, as demonstrated by an HTTPS session using Triple DES in CBC mode, aka a \"Sweet32\" attack.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "03d13c0cbfe912eb0f9b9a02987b9e569f25fe19"
                            },
                            {
                                "fixed": "d988f429fe43808345812ef63dfa8da170c61871"
                            },
                            {
                                "fixed": "fa53dbdec818b0f2a0e22ca12a49d83ec948fc91"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://www.openssl.org/blog/blog/2016/08/24/sweet32/"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue27850"
            },
            {
                "type": "WEB",
                "url": "https://sweet32.info/"
            }
        ]
    },
    {
        "id": "PSF-2023-1",
        "summary": "urlparse does not correctly handle schemes",
        "details": "An issue in the urllib.parse component of Python before 3.11.4 allows attackers to bypass blocklisting methods by supplying a URL that starts with blank characters.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "439b9cfaf43080e91c4ad69f312f21fa098befc7"
                            },
                            {
                                "fixed": "72d356e3584ebfb8e813a8e9f2cd3dccf233c0d9"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/99418"
            },
            {
                "type": "WEB",
                "url": "https://pointernull.com/security/python-url-parse-problem.html"
            }
        ]
    },
    {
        "id": "PSF-2008-4",
        "summary": "Multiple integer overflows (Apple)",
        "details": "Multiple integer overflows in Python 2.5.2 and earlier allow context-dependent attackers to have an unknown impact via vectors related to the (1) stringobject, (2) unicodeobject, (3) bufferobject, (4) longobject, (5) tupleobject, (6) stropmodule, (7) gcmodule, and (8) mmapmodule modules.  NOTE: The expandtabs integer overflows in stringobject and unicodeobject in 2.5.2 are covered by CVE-2008-5031.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3ce5d9207e66d61d4b0502cf47ed2d2bcdd2212f"
                            },
                            {
                                "fixed": "e7d8be80ba634fa15ece6f503c33592e0d333361"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://lists.apple.com/archives/security-announce/2009/Feb/msg00000.html"
            }
        ]
    },
    {
        "id": "PSF-2012-3",
        "summary": "XML-RPC DoS",
        "details": "SimpleXMLRPCServer.py in SimpleXMLRPCServer in Python before 2.6.8, 2.7.x before 2.7.3, 3.x before 3.1.5, and 3.2.x before 3.2.3 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via an XML-RPC POST request that contains a smaller amount of data than specified by the Content-Length header.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "66f3cc6f8de83c447d937160e4a1630c4482b5f5"
                            },
                            {
                                "fixed": "ec1712a1662282c909b4cd4cc0c7486646bc9246"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue14001"
            }
        ]
    },
    {
        "id": "PSF-2022-5",
        "summary": "http.server: Open Redirection if the URL path starts with //",
        "details": "Python 3.x through 3.10 has an open redirection vulnerability in lib/http/server.py due to no protection against multiple (/) at the beginning of URI path which may leads to information disclosure. NOTE: this is disputed by a third party because the http.server.html documentation page states \"Warning: http.server is not recommended for production. It only implements basic security checks.\"",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4dc2cae3abd75f386374d0635d00443b897d0672"
                            },
                            {
                                "fixed": "5715382d3a89ca118ce2e224d8c69550d21fe51b"
                            },
                            {
                                "fixed": "8a34afd55258c721e446d6de4a70353c39a24148"
                            },
                            {
                                "fixed": "defaa2b19a9a01c79c1d5641a8aa179bb10ead3f"
                            },
                            {
                                "fixed": "e2e8847bf52f4a81490653c6d13b7e3821b2c2be"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/CVE-2021-28861"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/87389"
            }
        ]
    },
    {
        "id": "PSF-2022-10",
        "summary": "Slow IDNA decoding with large strings",
        "details": "An issue was discovered in Python before 3.11.1. An unnecessary quadratic algorithm exists in one path when processing some inputs to the IDNA (RFC 3490) decoder, such that a crafted, unreasonably long name being presented to the decoder could lead to a CPU denial of service. Hostnames are often supplied by remote servers that could be controlled by a malicious actor; in such a scenario, they could trigger excessive CPU consumption on the client attempting to make use of an attacker-supplied supposed hostname. For example, the attack payload could be placed in the Location header of an HTTP response with status code 302. A fix is planned in 3.11.1, 3.10.9, 3.9.16, 3.8.16, and 3.7.16.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "82ca2839c9ec6bf9a9400e791a52411824df67f3"
                            },
                            {
                                "fixed": "9bb8e18ca46fe66fa6802602f8a7228a24dd785f"
                            },
                            {
                                "fixed": "a6f6c3a3d6f2b580f2d87885c9b8a9350ad7bf15"
                            },
                            {
                                "fixed": "b0b590be9597fd5919228d251812dd54145f70a7"
                            },
                            {
                                "fixed": "c09dba57cfbbf74273ce44b1f48f71b46806605c"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/98433"
            }
        ]
    },
    {
        "id": "PSF-2022-11",
        "summary": "Buffer overflow in the _sha3 module in Python 3.10 and older",
        "details": "The Keccak XKCP SHA-3 reference implementation before fdc6fef has an integer overflow and resultant buffer overflow that allows attackers to execute arbitrary code or eliminate expected cryptographic properties. This occurs in the sponge function interface.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0e4e058602d93b88256ff90bbef501ba20be9dd3"
                            },
                            {
                                "fixed": "8088c90044ba04cd5624b278340ebf934dbee4a5"
                            },
                            {
                                "fixed": "857efee6d2d43c5c12fc7e377ce437144c728ab8"
                            },
                            {
                                "fixed": "948c6794711458fd148a3fa62296cadeeb2ed631"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/98517"
            },
            {
                "type": "WEB",
                "url": "https://bugzilla.suse.com/show_bug.cgi?id=CVE-2022-37454"
            },
            {
                "type": "WEB",
                "url": "https://github.com/XKCP/XKCP/security/advisories/GHSA-6w4m-2xhg-2658"
            },
            {
                "type": "WEB",
                "url": "https://mouha.be/sha-3-buffer-overflow/"
            }
        ]
    },
    {
        "id": "PSF-2022-4",
        "summary": "Prevent DoS by large str-int conversions",
        "details": "A flaw was found in python. In algorithms with quadratic time complexity using non-binary bases, when using int(\"text\"), a system could take 50ms to parse an int string with 100,000 digits and 5s for 1,000,000 digits (float, decimal, int.from_bytes(), and int() for binary bases 2, 4, 8, 16, and 32 are not affected). The highest threat from this vulnerability is to system availability.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "15ec1afd4fcd2da1e2d2b256c562fb42d8d886a2"
                            },
                            {
                                "fixed": "8f0fa4bd10aba723aff988720cd26b93be99bc12"
                            },
                            {
                                "fixed": "b5e331fdb38684808ffc540d53e8595bdc408b89"
                            },
                            {
                                "fixed": "cec1e9dfd769bd3a16142d0fdd1a36f19c77ed15"
                            },
                            {
                                "fixed": "f8b71da9aac6ea74808dcdd0cc266e705431356b"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/CVE-2020-10735"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/95778"
            },
            {
                "type": "WEB",
                "url": "https://github.com/pydantic/pydantic/issues/1477"
            },
            {
                "type": "WEB",
                "url": "https://lwn.net/Articles/907572/"
            },
            {
                "type": "WEB",
                "url": "https://pythoninsider.blogspot.com/2022/09/python-releases-3107-3914-3814-and-3714.html"
            }
        ]
    },
    {
        "id": "PSF-2017-1",
        "summary": "JSONDecoder.raw_decode",
        "details": "Array index error in the scanstring function in the _json module in Python 2.7 through 3.5 and simplejson before 2.6.1 allows context-dependent attackers to read arbitrary process memory via a negative index value in the idx argument to the raw_decode function.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "6c939cb6f6dfbd273609577b0022542d31ae2802"
                            },
                            {
                                "fixed": "99b5afab74428e5ddfd877bdf3aa8a8c479696b1"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2014-4616"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue21529"
            }
        ]
    },
    {
        "id": "PSF-2008-5",
        "summary": "Multiple integer overflows (Apple)",
        "details": "Integer overflow in _hashopenssl.c in the hashlib module in Python 2.5.2 and earlier might allow context-dependent attackers to defeat cryptographic digests, related to \"partial hashlib hashing of data exceeding 4GB.\"",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3ce5d9207e66d61d4b0502cf47ed2d2bcdd2212f"
                            },
                            {
                                "fixed": "e7d8be80ba634fa15ece6f503c33592e0d333361"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://lists.apple.com/archives/security-announce/2009/Feb/msg00000.html"
            }
        ]
    },
    {
        "id": "PSF-2012-2",
        "summary": "pypirc created insecurely",
        "details": "Python 2.6 through 3.2 creates ~/.pypirc with world-readable permissions before changing them after data has been written, which introduces a race condition that allows local users to obtain a username and password by reading this file.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "d61926e6bef6c4d8105a2848362377dce91d7fc8"
                            },
                            {
                                "fixed": "e5567ccc863cadb68f5e57a2760e021e0d3807cf"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue13512"
            }
        ]
    },
    {
        "id": "PSF-2016-5",
        "summary": "Windows: vulnerable bzip2 1.0.6",
        "details": "Use-after-free vulnerability in bzip2recover in bzip2 1.0.6 allows remote attackers to cause a denial of service (crash) via a crafted bzip2 file, related to block ends set to before the start of the block.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4a3c610cd635f14747cf02c77908e80620aae6ea"
                            },
                            {
                                "fixed": "58d576a43cb1800dd68f06a429d7d41f746a8c01"
                            },
                            {
                                "fixed": "6649519e67841b1aa12672f1d9b5cb24494f6196"
                            },
                            {
                                "fixed": "e1639f361ee0dfbf08bb8538839d3d557c1a995c"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2016-3189"
            },
            {
                "type": "ADVISORY",
                "url": "https://access.redhat.com/security/cve/cve-2019-12900"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue44549"
            }
        ]
    },
    {
        "id": "PSF-2018-4",
        "summary": "difflib and poplib catastrophic backtracking",
        "details": "python before versions 2.7.15, 3.4.9, 3.5.6rc1, 3.6.5rc1 and 3.7.0 is vulnerable to catastrophic backtracking in the difflib.IS_LINE_JUNK method.  An attacker could use this flaw to cause denial of service.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0902a2d6b2d1d9dbde36aeaaccf1788ceaa97143"
                            },
                            {
                                "fixed": "0e6c8ee2358a2e23117501826c008842acb835ac"
                            },
                            {
                                "fixed": "937ac1fe069a4dc8471dff205f553d82e724015b"
                            },
                            {
                                "fixed": "942cc04ae44825ea120e3a19a80c9b348b8194d0"
                            },
                            {
                                "fixed": "c9516754067d71fd7429a25ccfcb2141fc583523"
                            },
                            {
                                "fixed": "e052d40cea15f582b50947f7d906b39744dc62a2"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue32981"
            }
        ]
    },
    {
        "id": "PSF-2024-2",
        "summary": "",
        "details": "An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.\n\nThe zipfile module is vulnerable to \u201cquoted-overlap\u201d zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.\n\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "repo": "https://github.com/python/cpython",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "66363b9a7b9fe7c99eba3a185b74c5fdbf842eba"
                            },
                            {
                                "fixed": "fa181fcf2156f703347b03a3b1966ce47be8ab3b"
                            },
                            {
                                "fixed": "a956e510f6336d5ae111ba429a61c3ade30a7549"
                            },
                            {
                                "fixed": "30fe5d853b56138dbec62432d370a1f99409fc85"
                            },
                            {
                                "fixed": "a2c59992e9e8d35baba9695eb186ad6c6ff85c51"
                            },
                            {
                                "fixed": "d05bac0b74153beb541b88b4fca33bf053990183"
                            },
                            {
                                "fixed": "70497218351ba44bffc8b571201ecb5652d84675"
                            }
                        ]
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/66363b9a7b9fe7c99eba3a185b74c5fdbf842eba"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/fa181fcf2156f703347b03a3b1966ce47be8ab3b"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/a956e510f6336d5ae111ba429a61c3ade30a7549"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/30fe5d853b56138dbec62432d370a1f99409fc85"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/a2c59992e9e8d35baba9695eb186ad6c6ff85c51"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/d05bac0b74153beb541b88b4fca33bf053990183"
            },
            {
                "type": "REPORT",
                "url": "https://github.com/python/cpython/issues/109858"
            },
            {
                "type": "WEB",
                "url": "https://www.bamsoftware.com/hacks/zipbomb/"
            },
            {
                "type": "ADVISORY",
                "url": "https://mail.python.org/archives/list/security-announce@python.org/thread/XELNUX2L3IOHBTFU7RQHCY6OUVEWZ2FG/"
            },
            {
                "type": "WEB",
                "url": "https://lists.debian.org/debian-lts-announce/2024/03/msg00024.html"
            },
            {
                "type": "WEB",
                "url": "https://lists.debian.org/debian-lts-announce/2024/03/msg00025.html"
            },
            {
                "type": "WEB",
                "url": "http://www.openwall.com/lists/oss-security/2024/03/20/5"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/commit/70497218351ba44bffc8b571201ecb5652d84675"
            },
            {
                "type": "WEB",
                "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/T3IGRX54M7RNCQOXVQO5KQKTGWCOABIM/"
            },
            {
                "type": "WEB",
                "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U5VHWS52HGD743C47UMCSAK2A773M2YE/"
            }
        ]
    },
    {
        "id": "PSF-2020-5",
        "summary": "http.client: HTTP Header Injection in the HTTP method",
        "details": "http.client in Python 3.x before 3.5.10, 3.6.x before 3.6.12, 3.7.x before 3.7.9, and 3.8.x before 3.8.5 allows CRLF injection if the attacker controls the HTTP request method, as demonstrated by inserting CR and LF control characters in the first argument of HTTPConnection.request.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "27b811057ff5e93b68798e278c88358123efdc71"
                            },
                            {
                                "fixed": "524b8de630036a29ca340bc2ae6fd6dc7dda8f40"
                            },
                            {
                                "fixed": "668d321476d974c4f51476b33aaca870272523bf"
                            },
                            {
                                "fixed": "8ca8a2e8fb068863c1138f07e3098478ef8be12e"
                            },
                            {
                                "fixed": "ca75fec1ed358f7324272608ca952b2d8226d11a"
                            },
                            {
                                "fixed": "f02de961b9f19a5db0ead56305fe0057a78787ae"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue39603"
            }
        ]
    },
    {
        "id": "PSF-2023-10",
        "summary": "DoS when reading malformed Apple Property List files in binary format",
        "details": "read_ints in plistlib.py in Python through 3.9.1 is vulnerable to a potential DoS attack via CPU and RAM exhaustion when processing malformed Apple Property List files in binary format.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "34637a0ce21e7261b952fbd9d006474cc29b681f"
                            },
                            {
                                "fixed": "e277cb76989958fdbc092bf0b2cb55c43e86610a"
                            },
                            {
                                "fixed": "547d2bcc55e348043b2f338027c1acd9549ada76"
                            },
                            {
                                "fixed": "225e3659556616ad70186e7efc02baeebfeb5ec4"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://www.cve.org/CVERecord?id=CVE-2022-48564"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue42103"
            },
            {
                "type": "FIX",
                "url": "https://github.com/python/cpython/pull/22882"
            }
        ]
    },
    {
        "id": "PSF-2010-3",
        "summary": "rgbimg and imageop overflows",
        "details": "Multiple buffer overflows in the RLE decoder in the rgbimg module in Python 2.5 allow remote attackers to have an unspecified impact via an image file containing crafted data that triggers improper processing within the (1) longimagedata or (2) expandrow function.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "4df1b6d478020ac51c84467f47e42083f53adbad"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue1179"
            },
            {
                "type": "WEB",
                "url": "http://bugs.python.org/issue8678"
            },
            {
                "type": "WEB",
                "url": "http://seclists.org/fulldisclosure/2007/Sep/279"
            },
            {
                "type": "WEB",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=541698"
            }
        ]
    },
    {
        "id": "PSF-2014-4",
        "summary": "socket.recvfrom_into() overflow",
        "details": "Buffer overflow in the socket.recvfrom_into function in Modules/socketmodule.c in Python 2.5 before 2.7.7, 3.x before 3.3.4, and 3.4.x before 3.4rc1 allows remote attackers to execute arbitrary code via a crafted string.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "28cf368c1baba3db1f01010e921f63017af74c8f"
                            },
                            {
                                "fixed": "fbf648ebba32bbc5aa571a4b09e2062a65fd2492"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue20246"
            }
        ]
    },
    {
        "id": "PSF-2019-13",
        "summary": "ssl.match_hostname() ignores extra string after whitespace in IPv4 address",
        "details": "``inet_aton()`` accepts trailing characters after a valid IP.  Because of\nthat, Python ``ssl.match_hostname('1.1.1.1 ; this should not work but does')``\nsucceeded when it should fail.\n\nThe issue was introduced in `bpo-32819\n<https://bugs.python.org/issue32819>`_ by `commit aef1283b\n<https://github.com/python/cpython/commit/aef1283ba428e33397d87cee3c54a5110861552d>`_.\nOnly Python 3.7 and newer are affected. It's a potential security bug\nalthough **low severity**. For one Python 3.7 and newer **no longer use**\n``ssl.match_hostname()`` to verify hostnames and IP addresses of a\ncertificate: **matching is performed by OpenSSL**.\n\nIt should not possible to register a x509 certificate with a hostname with\nspaces.\n\nThe glibc function ``inet_aton()`` accepts input as valid if said input is\na IPv4 address followed by zero or more characters that are valid\nwhite-space as decided by ``isspace()``, with the rest of the string after\nthe first white-space being ignored. As ``'\\r'`` is a valid white-space\ncharacter the rest of the string is ignored (including the ``'\\r'``). See\n`glibc bug 24111: Deprecate inet_addr, inet_aton\n<https://sourceware.org/bugzilla/show_bug.cgi?id=24111>`_.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "070fae6d0ff49e63bfd5f2bdc66f8eb1df3b6557"
                            },
                            {
                                "fixed": "3cba3d3c55f230a59174a0dfcafb1d4685269e60"
                            },
                            {
                                "fixed": "477b1b25768945621d466a8b3f0739297a842439"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue37463"
            }
        ]
    },
    {
        "id": "PSF-2021-1",
        "summary": "urllib parse_qsl(): Web cache poisoning - semicolon as a query args separator",
        "details": "The package python/cpython from 0 and before 3.6.13, from 3.7.0 and before 3.7.10, from 3.8.0 and before 3.8.8, from 3.9.0 and before 3.9.2 are vulnerable to Web Cache Poisoning via urllib.parse.parse_qsl and urllib.parse.parse_qs by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "5c17dfc5d70ce88be99bc5769b91ce79d7a90d61"
                            },
                            {
                                "fixed": "c9f07813ab8e664d8c34413c4fc2d4f86c061a92"
                            },
                            {
                                "fixed": "d0d4d30882fe3ab9b1badbecf5d15d94326fd13e"
                            },
                            {
                                "fixed": "e3110c3cfbb7daa690d54d0eff6c264c870a71bf"
                            },
                            {
                                "fixed": "fcbe0cb04d35189401c0c880ebfb4311e952d776"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://snyk.io/vuln/SNYK-UPSTREAM-PYTHONCPYTHON-1074933"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue42967"
            },
            {
                "type": "WEB",
                "url": "https://snyk.io/blog/cache-poisoning-in-popular-open-source-packages/"
            }
        ]
    },
    {
        "id": "PSF-2022-8",
        "summary": "urllib.parse should sanitize urls containing ASCII newline and tabs.",
        "details": "A flaw was found in Python, specifically within the urllib.parse module. This module helps break Uniform Resource Locator (URL) strings into components. The issue involves how the urlparse method does not sanitize input and allows characters like '\\r' and '\\n' in the URL path. This flaw allows an attacker to input a crafted URL, leading to injection attacks. This flaw affects Python versions prior to 3.10.0b1, 3.9.5, 3.8.11, 3.7.11 and 3.6.14.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "491fde0161d5e527eeff8586dd3972d7d3a631a7"
                            },
                            {
                                "fixed": "515a7bc4e13645d0945b46a8e1d9102b918cd407"
                            },
                            {
                                "fixed": "6c472d3a1d334d4eeb4a25eba7bf3b01611bf667"
                            },
                            {
                                "fixed": "76cd81d60310d65d01f9d7b48a8985d8ab89c8b4"
                            },
                            {
                                "fixed": "f4dac7ec55477a6c5d965e594e74bd6bda786903"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://bugzilla.redhat.com/show_bug.cgi?id=2047376"
            },
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue43882"
            }
        ]
    },
    {
        "id": "PSF-2008-9",
        "summary": "Multiple integer overflows (Apple)",
        "details": "Multiple integer overflows in imageop.c in the imageop module in Python 1.5.2 through 2.5.1 allow context-dependent attackers to break out of the Python VM and execute arbitrary code via large integer values in certain arguments to the crop function, leading to a buffer overflow, a different vulnerability than CVE-2007-4965 and CVE-2008-1679.",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "3ce5d9207e66d61d4b0502cf47ed2d2bcdd2212f"
                            },
                            {
                                "fixed": "e7d8be80ba634fa15ece6f503c33592e0d333361"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "ADVISORY",
                "url": "https://lists.apple.com/archives/security-announce/2009/Feb/msg00000.html"
            }
        ]
    },
    {
        "id": "PSF-2016-9",
        "summary": "Issue #26657: HTTP server directory traversal",
        "details": "Fix directory traversal vulnerability with ``http.server`` and\n``SimpleHTTPServer`` on Windows.\n\nRegression of Python 3.3.5.\n\nPython issue reported at 2016-03-14.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "0cf2cf2b7d726d12a6046441e4067d32c7dd4feb"
                            },
                            {
                                "fixed": "6f6bc1da8aaae52664e7747e328d26eb59c0e74f"
                            },
                            {
                                "fixed": "7b92f9fa47df754b50c64aac84cf1c09693571af"
                            },
                            {
                                "fixed": "d274b3f1f1e2d8811733fb952c9f18d7da3a376a"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue26657"
            }
        ]
    },
    {
        "id": "PSF-2018-8",
        "summary": "Email folding function Denial-of-Service",
        "details": "The email folding function enters an infinite loop if a header is longer\nthan the policy maximum line length and contains many non-ASCII characters.\n\nRegression introduced in Python 3.6.4.\n",
        "affected": [
            {
                "ranges": [
                    {
                        "type": "GIT",
                        "events": [
                            {
                                "introduced": "0"
                            },
                            {
                                "fixed": "2fef5b01e36a17e36fd7e65c4b51f5ede8880dda"
                            },
                            {
                                "fixed": "516a6a254814d2bc6a90290dfc44d77fdfb4050b"
                            },
                            {
                                "fixed": "c1f5667be1e3ec5871560c677402c1252c6018a6"
                            }
                        ],
                        "repo": "https://github.com/python/cpython"
                    }
                ]
            }
        ],
        "references": [
            {
                "type": "REPORT",
                "url": "https://bugs.python.org/issue33529"
            }
        ]
    }
]